class l1a3_puzzlep : base_object {
    property parent;
    property smallplats;
    property largeplats;
    property bgmusic;
    
    method l1a3_puzzlep(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        gcareadirector::setnearestmax(50);
        this.smallplats = [  ];
        var1 = new lego_volatileplatform("pl00", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl01", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl02", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl04", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl05", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl06", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl08", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl09", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl10", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl12", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl13", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl15", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl18", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl19", this.parent.name);
        this.smallplats.__append(var1);
        var1 = new lego_volatileplatform("pl20", this.parent.name);
        this.smallplats.__append(var1);
        this.largeplats = [  ];
        var1 = new lego_volatileplatform("pl03", this.parent.name);
        this.largeplats.__append(var1);
        var1 = new lego_volatileplatform("pl07", this.parent.name);
        this.largeplats.__append(var1);
        var1 = new lego_volatileplatform("pl11", this.parent.name);
        this.largeplats.__append(var1);
        var1 = new lego_volatileplatform("pl14", this.parent.name);
        this.largeplats.__append(var1);
        var1 = new lego_volatileplatform("pl16", this.parent.name);
        this.largeplats.__append(var1);
        var1 = new lego_volatileplatform("pl17", this.parent.name);
        this.largeplats.__append(var1);
        return null;
    }
    
    method onevent(param1) {
        var var1;
        if (param1.eventid == 1) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                if (param1.args[1] == scslosifoundation::stringtoidentifier("pl00")) {
                    this.smallplats[1].touch();
                }
                else if (param1.args[1] == scslosifoundation::stringtoidentifier("pl03")) {
                    this.smallplats[5].touch();
                }
                else if (param1.args[1] == scslosifoundation::stringtoidentifier("pl07")) {
                    this.smallplats[8].touch();
                    this.smallplats[10].touch();
                }
            }
            param1.args[0];
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("o000"));
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
            var1 = 0;
            while ((this.smallplats.__length - 1) >= var1) {
                this.smallplats[var1].reset();
                var1 = var1 + 1;
            }
            var1 = 0;
            while ((this.largeplats.__length - 1) >= var1) {
                this.largeplats[var1].reset();
                var1 = var1 + 1;
            }
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tbl5"), 0);
        }
        else if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tbl5")) {
                globalclass.player.kill();
                gcstaticsoundsptrarray::playtablesound(737);
            }
        }
        var1 = 0;
        while ((this.smallplats.__length - 1) >= var1) {
            this.smallplats[var1].onevent(param1);
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.largeplats.__length - 1) >= var1) {
            this.largeplats[var1].onevent(param1);
            var1 = var1 + 1;
        }
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method input(param1) {
        if (param1.button == 80) {
            if (param1.event == 2) {
                this.cheat();
            }
        }
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var1 = 0;
        while ((this.smallplats.__length - 1) >= var1) {
            this.smallplats[var1].cleanupfull();
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.largeplats.__length - 1) >= var1) {
            this.largeplats[var1].cleanupfull();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method cleanupshort() {
        this.cleanupfull();
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method show() {
        var var1;
        var var2;
        this.bgmusic = new legomp3player();
        this.bgmusic.setupforplay("Root/Data/sounds/MUSICOnuaAmbience");
        this.bgmusic.play(1);
        var1 = 0;
        while ((this.smallplats.__length - 1) >= var1) {
            this.smallplats[var1].initfull();
            if (var1 <= 9) {
                var2 = "so0" + __tostring(var1);
            }
            else {
                var2 = "so" + __tostring(var1);
            }
            this.smallplats[var1].settimetofall(1.2);
            this.smallplats[var1].setshakebobbleintensity(1.2);
            this.smallplats[var1].show();
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.largeplats.__length - 1) >= var1) {
            this.largeplats[var1].initfull();
            if (var1 <= 9) {
                var2 = "lo0" + __tostring(var1);
            }
            else {
                var2 = "lo" + __tostring(var1);
            }
            this.largeplats[var1].settimetofall(1.5);
            this.largeplats[var1].setshakebobbleintensity(1.2);
            this.largeplats[var1].show();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method hide() {
        var var1;
        this.bgmusic.stop();
        this.bgmusic = null;
        var1 = 0;
        while ((this.smallplats.__length - 1) >= var1) {
            this.smallplats[var1].cleanupfull();
            this.smallplats[var1] = null;
            var1 = var1 + 1;
        }
        this.smallplats = null;
        var1 = 0;
        while ((this.largeplats.__length - 1) >= var1) {
            this.largeplats[var1].cleanupfull();
            this.largeplats[var1] = null;
            var1 = var1 + 1;
        }
        this.largeplats = null;
        return null;
    }
    
    method cheat() {
        return null;
    }
}