class pizza_puzzlep : base_object {
    property parent;
    property mask;
    property bgmusic;
    property showmask;
    property cinema1shown;
    property cinema2shown;
    property cinema1;
    property cinema2;
    property pushblock1;
    property pushblock2;
    property blockplane1;
    property blockplane2;
    
    method pizza_puzzlep(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        this.cinema1shown = 0;
        this.cinema1 = gccinemaengine::create();
        gccinemaengine::load(this.cinema1, "cin4");
        this.cinema2shown = 0;
        this.cinema2 = gccinemaengine::create();
        gccinemaengine::load(this.cinema2, "cin5");
        var1 = gcsaver::findmask(scslosifoundation::stringtoidentifier("mskv"));
        if (var1) {
            this.showmask = 0;
            debug::print("* cnt1 has mask");
        }
        else {
            this.showmask = 1;
            debug::print("* mask show");
        }
        if (this.showmask) {
            this.mask = new lego_pickup("mskv", 8, 1, "item", 3, 1);
            this.mask.initfull();
            this.mask.show();
        }
        this.pushblock1 = new lego_moveableobject("blda");
        this.pushblock1.initfull();
        this.pushblock1.setresponse(1, 1, 1);
        this.pushblock1.disablecollisions();
        this.blockplane1 = new lego_triggerobject("tp00", this.parent.name);
        this.blockplane1.initfull();
        this.blockplane1.setresponse(1, 1);
        this.pushblock2 = new lego_moveableobject("bldb", this.parent.name);
        this.pushblock2.initfull();
        this.pushblock2.setresponse(1, 1, 1);
        this.pushblock2.disablecollisions();
        this.blockplane2 = new lego_triggerobject("tp01", this.parent.name);
        this.blockplane2.initfull();
        this.blockplane2.setresponse(1, 1);
        if (!(this.mask == null)) {
            if (this.mask.objshown) {
                this.mask.show();
            }
        }
        this.bgmusic = new legomp3player();
        this.bgmusic.setupforplay("Root/Data/sounds/MUSIClegoTRANCE");
        this.bgmusic.play(1);
        return null;
    }
    
    method cleanupfull() {
        this.cinema1 = null;
        this.cinema2 = null;
        this.bgmusic.stop();
        this.bgmusic = null;
        if (!(this.mask == null)) {
            this.showmask = this.mask.objshown;
            this.mask.cleanupfull();
            this.mask = null;
        }
        if (!(this.pushblock1 == null)) {
            this.pushblock1.cleanupfull();
            this.pushblock1 = null;
        }
        if (!(this.blockplane1 == null)) {
            this.blockplane1.cleanupfull();
            this.blockplane1 = null;
        }
        if (!(this.pushblock2 == null)) {
            this.pushblock2.cleanupfull();
            this.pushblock2 = null;
        }
        if (!(this.blockplane2 == null)) {
            this.blockplane2.cleanupfull();
            this.blockplane2 = null;
        }
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 4) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tp00")) {
                if (this.cinema1shown == 0) {
                    if ((globalclass.player.whichmaskonface() == 0) && (globalclass.player.ismaskpoweron() == 1)) {
                        globalclass.hud.hide();
                        gccinemaengine::play(this.cinema1);
                        this.cinema1shown = 1;
                        this.blockplane1.setresponse(4, 4);
                        this.pushblock1.enablecollisions();
                    }
                }
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("tp01")) {
                if (this.cinema2shown == 0) {
                    if ((globalclass.player.whichmaskonface() == 0) && (globalclass.player.ismaskpoweron() == 1)) {
                        globalclass.hud.hide();
                        gccinemaengine::play(this.cinema2);
                        this.cinema2shown = 1;
                        this.blockplane2.setresponse(4, 4);
                        this.pushblock2.enablecollisions();
                    }
                }
            }
        }
        else if (param1.eventid == 30) {
            globalclass.hud.show();
            globalclass.hud.slideall(1);
        }
        else if (param1.eventid == 46) {
            gccollisionphysicsgroup::spinmask(1.2);
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("o000"));
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
        }
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method input(param1) {
        if (param1.button == 80) {
            if (param1.event == 2) {
                this.cheat();
            }
        }
        return null;
    }
    
    method cheat() {
        return null;
    }
}