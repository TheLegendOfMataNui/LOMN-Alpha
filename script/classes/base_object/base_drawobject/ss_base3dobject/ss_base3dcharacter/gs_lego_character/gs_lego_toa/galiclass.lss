class galiclass : gs_lego_toa {
    property walkspeed;
    property runspeed;
    property standingjumpheight;
    property standingjumplength;
    property runningjumpheight;
    property runningjumplength;
    property swimingabilty;
    property bounce;
    property mapperstate;
    property inputhandle;
    
    method galiclass(param1, param2, param3, param4, param5) {
        this.gs_lego_toa(param1, param2, param3, param4, param5);
        this.mapperhandle = gcgame::getkeymapper();
        this.walkspeed = 4;
        this.runspeed = 15;
        this.standingjumpheight = 6;
        this.standingjumplength = 6;
        this.runningjumpheight = 4;
        this.runningjumplength = 8;
        this.swimingabilty = 0;
        this.bounce = 0;
        this.mapperstate = 1;
        gckeymapper::setusecontext(this.mapperhandle, 0);
        this.inputhandle = null;
        return null;
    }
    
    method initfull() {
        this.lego_toa_initfull();
        this.inputhandle = globalclass.addtoinputlist(this);
        return null;
    }
    
    method cleanupfull() {
        this.lego_toa_cleanupfull();
        globalclass.removefrominputlist(this.inputhandle);
        this.inputhandle = null;
        return null;
    }
    
    method onevent(param1) {
        return null;
    }
    
    method input(param1) {
        if (param1.event == 2) {
            if (param1.button == 231) {
                if (this.mapperstate == 0) {
                    if ((globalclass.player.grapplinghooksetup) && (globalclass.player.bshootdragger == 1)) {
                        this.shootdragger();
                    }
                    else {
                        debug::print("SORRY, YOU ARE IN THE TRIG BOX YOU CANNOT SHOOT YOUR DRAGGER");
                    }
                }
            }
        }
        return null;
    }
    
    method setcontext(param1) {
        var var1;
        var1 = param1;
        if (var1 == 0) {
            this.mapperstate = 0;
            gckeymapper::setusecontext(this.mapperhandle, 0);
        }
        else if (var1 == 1) {
            this.mapperstate = 1;
            gckeymapper::setusecontext(this.mapperhandle, 0);
        }
        return null;
    }
    
    method setupgrapplinghook(param1, param2, param3) {
        this.setdraggerreaction(0);
        this.setmydraggerreactionanimation(scslosifoundation::stringtoidentifier("g000"));
        this.restrictdraggercameramode(12);
        this.setupdraggertip("Root/data/art/hud/elemrotate/vinegrab", "vinegrab", scslosifoundation::stringtoidentifier("hand"), scslosifoundation::stringtoidentifier("cnt1"));
        this.setupdraggermaxrange(100);
        this.setupdraggerspeeds(param2, param3);
        this.settargeteermaxrange(200);
        this.settargeteerselectionmode(1);
        this.settargeteerconeangle(param1);
        debug::print("GrapplingHook has been setUp.");
        return null;
    }
    
    method setgrapplinghookdistance(param1) {
        this.setupdraggermaxrange(param1);
        return null;
    }
}