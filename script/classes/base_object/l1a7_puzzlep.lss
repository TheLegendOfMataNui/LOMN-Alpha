class l1a7_puzzlep : base_object {
    property parent;
    property plataarray;
    property platbarray;
    property platcarray;
    property door;
    property glyph;
    property showglyph;
    property camstate;
    property mycamtimer;
    property bgmusic;
    
    method l1a7_puzzlep(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var var2;
        var var3;
        var1 = 0;
        this.mycamtimer = new lego_timer("cmtm", 4.0, 0);
        this.door = new lego_moveableobject("drp0", this.parent.name);
        var2 = gcsaver::findglyph(scslosifoundation::stringtoidentifier("gly1"));
        if (var2) {
            this.showglyph = 0;
        }
        else {
            this.showglyph = 1;
        }
        if (this.showglyph) {
            this.glyph = new lego_pickup("glyl", 2, 2, "item", 6, 1);
            this.glyph.initfull();
        }
        this.plataarray = [ new lego_volatileplatform("cla0", this.parent.name), 
            new lego_volatileplatform("cla1", this.parent.name), 
            new lego_volatileplatform("cla2", this.parent.name), 
            new lego_volatileplatform("cla3", this.parent.name), 
            new lego_volatileplatform("cla4", this.parent.name), 
            new lego_volatileplatform("cla5", this.parent.name), 
            new lego_volatileplatform("cla6", this.parent.name), 
            new lego_volatileplatform("cla7", this.parent.name), 
            new lego_volatileplatform("cla8", this.parent.name), 
            new lego_volatileplatform("cla9", this.parent.name), 
            new lego_volatileplatform("claa", this.parent.name), 
            new lego_volatileplatform("clab", this.parent.name) ];
        this.platbarray = [ new lego_volatileplatform("clb0", this.parent.name), 
            new lego_volatileplatform("clb1", this.parent.name), 
            new lego_volatileplatform("clb2", this.parent.name), 
            new lego_volatileplatform("clb3", this.parent.name), 
            new lego_volatileplatform("clb4", this.parent.name), 
            new lego_volatileplatform("clb5", this.parent.name), 
            new lego_volatileplatform("clb6", this.parent.name), 
            new lego_volatileplatform("clb7", this.parent.name), 
            new lego_volatileplatform("clb8", this.parent.name), 
            new lego_volatileplatform("clb9", this.parent.name), 
            new lego_volatileplatform("clba", this.parent.name), 
            new lego_volatileplatform("clbb", this.parent.name) ];
        this.platcarray = [ new lego_volatileplatform("clc0", this.parent.name), 
            new lego_volatileplatform("clc1", this.parent.name), 
            new lego_volatileplatform("clc2", this.parent.name), 
            new lego_volatileplatform("clc3", this.parent.name), 
            new lego_volatileplatform("clc4", this.parent.name), 
            new lego_volatileplatform("clc5", this.parent.name), 
            new lego_volatileplatform("clc6", this.parent.name), 
            new lego_volatileplatform("clc7", this.parent.name), 
            new lego_volatileplatform("clc8", this.parent.name), 
            new lego_volatileplatform("clc9", this.parent.name), 
            new lego_volatileplatform("clca", this.parent.name), 
            new lego_volatileplatform("clcb", this.parent.name) ];
        this.camstate = 1;
        this.mycamtimer.initfull();
        this.door.initfull();
        this.door.settweakable();
        var3 = 0;
        while ((this.plataarray.__length - 1) >= var3) {
            this.plataarray[var3].initfull();
            this.platbarray[var3].initfull();
            this.platcarray[var3].initfull();
            this.plataarray[var3].show();
            this.platbarray[var3].show();
            this.platcarray[var3].show();
            this.plataarray[var3].settimetofall(0);
            this.platbarray[var3].settimetofall(0);
            this.platcarray[var3].settimetofall(0);
            var3 = var3 + 1;
        }
        this.bgmusic = new legomp3player();
        this.bgmusic.setupforplay("Root/Data/sounds/LEGOUNDERGROUNDMUSIC");
        this.bgmusic.play(1);
        return null;
    }
    
    method onevent(param1) {
        var var1;
        var var2;
        if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tbl5"), 0);
            globalclass.player.unkill();
            this.parent.level.cam.setaimode(11);
            var1 = 0;
            while ((this.plataarray.__length - 1) >= var1) {
                this.plataarray[var1].reset();
                this.platbarray[var1].reset();
                this.platcarray[var1].reset();
                var1 = var1 + 1;
            }
            var2 = 1;
        }
        else if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tbl5")) {
                globalclass.player.kill();
                gcstaticsoundsptrarray::playtablesound(737);
            }
        }
        else if (param1.eventid == 8) {
            
        }
        else if (param1.eventid == 1) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                var1 = 0;
                while ((this.plataarray.__length - 1) >= var1) {
                    if (param1.args[1] == this.plataarray[var1].id) {
                        if ((globalclass.player.whichmaskonface() == 7) && (globalclass.player.ismaskpoweron() == 1)) {
                            
                        }
                        else {
                            this.plataarray[var1].touch();
                            this.platbarray[var1].touch();
                            this.platcarray[var1].touch();
                        }
                        var1 = this.plataarray.__length - 1;
                    }
                    var1 = var1 + 1;
                }
                if (param1.args[1] == scslosifoundation::stringtoidentifier("glyl")) {
                    this.opendoor();
                }
            }
        }
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method input(param1) {
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var var2;
        if (this.plataarray != null) {
            var1 = this.plataarray.__length - 1;
            var2 = 0;
            while (var1 >= var2) {
                this.plataarray[var1 - var2].cleanupfull();
                this.plataarray[var1 - var2] = null;
                var2 = var2 + 1;
            }
        }
        if (this.platbarray != null) {
            var1 = this.platbarray.__length - 1;
            var2 = 0;
            while (var1 >= var2) {
                this.platbarray[var1 - var2].cleanupfull();
                this.platbarray[var1 - var2] = null;
                var2 = var2 + 1;
            }
        }
        if (this.platcarray != null) {
            var1 = this.platcarray.__length - 1;
            var2 = 0;
            while (var1 >= var2) {
                this.platcarray[var1 - var2].cleanupfull();
                this.platcarray[var1 - var2] = null;
                var2 = var2 + 1;
            }
        }
        this.plataarray = null;
        this.platbarray = null;
        this.platcarray = null;
        if (this.glyph != null) {
            if (this.glyph.objshown == 0) {
                this.showglyph = 0;
            }
            this.glyph.cleanupfull();
            this.glyph = null;
        }
        if (this.door != null) {
            this.door.cleanupfull();
            this.door = null;
        }
        if (this.mycamtimer != null) {
            this.mycamtimer.cleanupfull();
            this.mycamtimer = null;
        }
        this.camstate = null;
        if (this.bgmusic != null) {
            this.bgmusic.stop();
            this.bgmusic = null;
        }
        return null;
    }
    
    method cleanupshort() {
        this.cleanupfull();
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method resetallplats() {
        var var1;
        var1 = 0;
        while ((this.plataarray.__length - 1) >= var1) {
            this.plataarray[var1].reset();
            this.platbarray[var1].reset();
            this.platcarray[var1].reset();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method opendoor() {
        this.door.interpolate(this.door.getx(), this.door.gety() + 10.0, this.door.getz(), 2.5);
        return null;
    }
}