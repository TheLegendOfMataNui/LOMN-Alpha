class snowman_puzzle {
    property parent;
    property icey;
    property stone;
    property hasstone;
    
    method snowman_puzzle(param1) {
        this.parent = param1;
        this.icey = null;
        this.stone = null;
        return null;
    }
    
    method initfull() {
        gcareadirector::setnearestmax(20);
        this.icey = new iceelemental(this);
        this.icey.init();
        globalclass.player.actor.setsurfingability(0.8, 1.0);
        globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("k033"), 0.1);
        if (gcsaver::finditem(scslosifoundation::stringtoidentifier("ston")) == 0) {
            this.stone = new lego_pickup("ston", 0, 4, "item", 11, 0);
            this.stone.initfull();
            this.stone.show();
            this.stone.hide();
        }
        this.hasstone = 0;
        return null;
    }
    
    method cleanupfull() {
        if (this.icey != null) {
            this.icey.cleanup();
            this.icey = null;
        }
        if (this.stone != null) {
            this.stone.cleanupfull();
            this.stone = null;
        }
        return null;
    }
    
    method showstone() {
        this.stone.show();
        return null;
    }
    
    method resetplayer() {
        var var1;
        globalclass.player.unkill();
        globalclass.player.actor.gotopos(scslosifoundation::stringtoidentifier("str1"), scslosifoundation::stringtoidentifier("lok1"));
        globalclass.player.actor.setsurfingability(0.8, 1.0);
        globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("k033"), 0.1);
        this.icey.reset();
        globalclass.player.actor.setinputstate("ninp");
        this.parent.level.cam.setaimode(11);
        var1 = scslosifoundation::stringtoidentifier("tb00");
        gccollisionphysicsgroup::toggletriggerboxentered(var1, 0);
        gccollisionphysicsgroup::toggletriggerboxentered(var1 + 1, 0);
        return null;
    }
    
    method process(param1) {
        this.icey.process(param1);
        return null;
    }
    
    method onevent(param1) {
        var var1;
        if (this.icey != null) {
            this.icey.onevent(param1);
        }
        if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tb00")) {
                globalclass.player.kill();
                globalclass.player.actor.setinputstate("none");
            }
            else if (param1.args[0] == (scslosifoundation::stringtoidentifier("tb00") + 1)) {
                globalclass.player.actor.setsurfingability(0, 1.0);
                globalclass.player.actor.idle();
                this.icey.start();
            }
        }
        else if (param1.eventid == 27) {
            this.resetplayer();
        }
        else if (param1.eventid == 39) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("ston")) {
                this.hasstone = 1;
            }
        }
        else if (param1.eventid == 7) {
            if (param1.args[2] == scslosifoundation::stringtoidentifier("Ecut")) {
                gcstaticsoundsptrarray::playtablesound(144);
            }
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 75) {
            if (param1.event == 2) {
                this.warp(1);
            }
        }
        if (param1.button == 76) {
            if (param1.event == 2) {
                this.warp(2);
            }
        }
        return null;
    }
    
    method warp(param1) {
        if (param1 == 2) {
            globalclass.player.actor.gotopos(scslosifoundation::stringtoidentifier("str1"), scslosifoundation::stringtoidentifier("lok1"));
        }
        globalclass.player.addelement(1);
        globalclass.player.addelement(11);
        globalclass.player.addmaxlife(20);
        globalclass.player.addmaxlife(20);
        globalclass.player.addmaxlife(20);
        return null;
    }
}