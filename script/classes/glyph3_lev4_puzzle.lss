class glyph3_lev4_puzzle {
    property parent;
    property switch1_up;
    property switch2_up;
    property switch3_up;
    property switch4_up;
    property switch5_up;
    property switch1;
    property switch2;
    property switch3;
    property switch4;
    property switch5;
    property numberofdownswitchs;
    property glyph;
    property doorarray;
    property doorsopen;
    property curentorient;
    property rotating;
    property rotatetime;
    property rotatespeed;
    property bgmusic;
    
    method glyph3_lev4_puzzle(param1) {
        this.parent = param1;
        this.switch1_up = 1;
        this.switch2_up = 1;
        this.switch3_up = 1;
        this.switch4_up = 1;
        this.switch5_up = 1;
        return null;
    }
    
    method initfull() {
        var var1;
        var var2;
        this.bgmusic = new legomp3player();
        this.bgmusic.setupforplay("Root/Data/sounds/Musiclowandcreepyambience");
        this.bgmusic.play(1);
        globalclass.player.actor.setunderwater(1);
        if (gcsaver::findglyph(scslosifoundation::stringtoidentifier("glyp")) == 0) {
            this.glyph = new lego_pickup("glyp", 7, 2, "item", 8, 1);
            this.glyph.initfull();
            this.glyph.show();
        }
        this.numberofdownswitchs = 0;
        this.switch1 = new lego_moveableobject("swc1");
        this.switch1.initfull();
        this.switch1.settweakable();
        this.switch1.setresponse(0, 0, 0);
        this.switch2 = new lego_moveableobject("swc2");
        this.switch2.initfull();
        this.switch2.settweakable();
        this.switch2.setresponse(0, 0, 0);
        this.switch3 = new lego_moveableobject("swc3");
        this.switch3.initfull();
        this.switch3.settweakable();
        this.switch3.setresponse(0, 0, 0);
        this.switch4 = new lego_moveableobject("swc4");
        this.switch4.initfull();
        this.switch4.settweakable();
        this.switch4.setresponse(0, 0, 0);
        this.switch5 = new lego_moveableobject("swc5");
        this.switch5.initfull();
        this.switch5.settweakable();
        this.switch5.setresponse(0, 0, 0);
        this.doorarray = [ new lego_moveableobject("g4d1"), 
            new lego_moveableobject("g4d2"), 
            new lego_moveableobject("g4d3"), 
            new lego_moveableobject("g4d4") ];
        var2 = 0;
        while ((this.doorarray.__length - 1) >= var2) {
            this.doorarray[var2].initfull();
            var2 = var2 + 1;
        }
        this.doorsopen = 0;
        this.curentorient = 0;
        this.rotating = 0;
        this.rotatetime = 0;
        this.rotatespeed = 7;
        return null;
    }
    
    method show() {
        this.settostartingpositions();
        return null;
    }
    
    method cleanupfull() {
        var var1;
        if (this.bgmusic != null) {
            this.bgmusic.stop();
            this.bgmusic.cleanupfordestroy();
            this.bgmusic = null;
        }
        this.switch1.cleanupfull();
        this.switch1 = null;
        this.switch2.cleanupfull();
        this.switch2 = null;
        this.switch3.cleanupfull();
        this.switch3 = null;
        this.switch4.cleanupfull();
        this.switch4 = null;
        this.switch5.cleanupfull();
        this.switch5 = null;
        this.numberofdownswitchs = null;
        var1 = 0;
        while ((this.doorarray.__length - 1) >= var1) {
            this.doorarray[var1].cleanupfull();
            this.doorarray[var1] = null;
            var1 = var1 + 1;
        }
        this.doorarray = null;
        this.doorsopen = null;
        this.curentorient = null;
        this.rotating = null;
        this.rotatetime = null;
        this.rotatespeed = null;
        if (this.glyph != null) {
            this.glyph.cleanupfull();
            this.glyph = null;
        }
        return null;
    }
    
    method process(param1) {
        if (this.rotating) {
            this.rotatetime = this.rotatetime + param1.deltatime;
            if (this.rotatespeed > 0) {
                if (this.rotatetime > (1 / this.rotatespeed)) {
                    this.rotatetime = 0;
                    this.opendoors();
                }
            }
        }
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.setunderwater(1);
        }
        else if (param1.eventid == 1) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("swc1")) {
                if (this.switch1_up) {
                    gcstaticsoundsptrarray::playtablesound(767);
                    this.switch1.setlocalpos(0, -1, 0);
                    this.numberofdownswitchs = this.numberofdownswitchs + 1;
                    this.switch1_up = 0;
                    this.test();
                }
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("swc2")) {
                if (this.switch2_up) {
                    gcstaticsoundsptrarray::playtablesound(767);
                    this.switch2.setlocalpos(0, -1, 0);
                    this.numberofdownswitchs = this.numberofdownswitchs + 1;
                    this.switch2_up = 0;
                    this.test();
                }
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("swc3")) {
                if (this.switch3_up) {
                    gcstaticsoundsptrarray::playtablesound(767);
                    this.switch3.setlocalpos(0, -1, 0);
                    this.numberofdownswitchs = this.numberofdownswitchs + 1;
                    this.switch3_up = 0;
                    this.test();
                }
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("swc4")) {
                if (this.switch4_up) {
                    gcstaticsoundsptrarray::playtablesound(767);
                    this.switch4.setlocalpos(0, -1, 0);
                    this.numberofdownswitchs = this.numberofdownswitchs + 1;
                    this.switch4_up = 0;
                    this.test();
                }
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("swc5")) {
                if (this.switch5_up) {
                    gcstaticsoundsptrarray::playtablesound(767);
                    this.switch5.setlocalpos(0, -1, 0);
                    this.numberofdownswitchs = this.numberofdownswitchs + 1;
                    this.switch5_up = 0;
                    this.test();
                }
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                if (param1.args[1] == scslosifoundation::stringtoidentifier("glyp")) {
                    this.glyph.pickup();
                }
            }
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 89) {
            if (param1.event == 2) {
                this.cheaton();
            }
        }
        return null;
    }
    
    method cheaton() {
        this.switch1_up = 0;
        this.switch2_up = 0;
        this.switch3_up = 0;
        this.switch4_up = 0;
        this.switch5_up = 0;
        this.settostartingpositions();
        return null;
    }
    
    method settostartingpositions() {
        if (this.switch1_up == 0) {
            this.switch1.setlocalpos(0, -1, 0);
            this.numberofdownswitchs = this.numberofdownswitchs + 1;
        }
        if (this.switch2_up == 0) {
            this.switch2.setlocalpos(0, -1, 0);
            this.numberofdownswitchs = this.numberofdownswitchs + 1;
        }
        if (this.switch3_up == 0) {
            this.switch3.setlocalpos(0, -1, 0);
            this.numberofdownswitchs = this.numberofdownswitchs + 1;
        }
        if (this.switch4_up == 0) {
            this.switch4.setlocalpos(0, -1, 0);
            this.numberofdownswitchs = this.numberofdownswitchs + 1;
        }
        if (this.switch5_up == 0) {
            this.switch5.setlocalpos(0, -1, 0);
            this.numberofdownswitchs = this.numberofdownswitchs + 1;
        }
        this.test();
        return null;
    }
    
    method test() {
        if (this.numberofdownswitchs >= 5) {
            this.rotating = 1;
        }
        return null;
    }
    
    method opendoors() {
        this.curentorient = this.curentorient + 1;
        if (this.curentorient > 100) {
            this.rotating = 0;
        }
        else {
            this.doorarray[0].setorientation(0, this.curentorient, 0);
            this.doorarray[1].setorientation(0, 0 - this.curentorient, 0);
            this.doorarray[2].setorientation(0, this.curentorient, 0);
            this.doorarray[3].setorientation(0, 0 - this.curentorient, 0);
        }
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
}