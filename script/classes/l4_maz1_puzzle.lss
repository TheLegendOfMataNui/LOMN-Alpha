class l4_maz1_puzzle {
    property parent;
    property boulder;
    property blocks;
    property icicles;
    property incme;
    property savecam;
    property falltimer;
    property camstate;
    property planeoff;
    property bats;
    property shake;
    property temporient;
    property firstdrop;
    property seconddrop;
    
    method l4_maz1_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var var2;
        var var3;
        gcareadirector::setnearestmax(50);
        var1 = 0;
        var2 = 0;
        this.incme = 0;
        this.shake = 1;
        this.temporient = 0;
        this.icicles = [  ];
        this.planeoff = 1;
        this.firstdrop = 1;
        this.seconddrop = 1;
        this.camstate = 0;
        this.falltimer = new lego_timer("fltm", 4.5, 0);
        this.falltimer.initfull();
        this.savecam = [  ];
        this.incme = 0;
        this.boulder = new lego_physicsobject("sn00", this.parent.name);
        this.boulder.initfull(1.0, 0, 0, 0, 0, 2.8, "snbl", "Root/data/levels/lev4/maz1", 60);
        this.boulder.setposition(336.1, 109.6, 0 - 534.4);
        this.boulder.setobjscale(2.3);
        this.boulder.setbouncefactor(0.15);
        this.boulder.setbounceeventrepoert(1);
        this.bats = [ new gs_lego_character("ib00", "ibat", "maz1", 0, 419.4, 0 - 32.9, 0 - 513.0, "aiin"), 
            new gs_lego_character("ib01", "ibat", "maz1", 0, 358.0, 0 - 25.1, 0 - 453.4, "aiin"), 
            new gs_lego_character("ib02", "ibat", "maz1", 0, 392.0, 15.4, 0 - 529.5, "aiin"), 
            new gs_lego_character("ib03", "ibat", "maz1", 0, 336.9, 15.7, 0 - 480.7, "aiin"), 
            new gs_lego_character("ib04", "ibat", "maz1", 0, 396.6, 66.5, 0 - 484.9, "aiin") ];
        var3 = 0;
        while ((this.bats.__length - 1) >= var3) {
            this.bats[var3].initfull();
            this.bats[var3].add();
            var3 = var3 + 1;
        }
        this.blocks = [ new lego_moveableobject("sb00", this.parent.name), 
            new lego_moveableobject("sb01", this.parent.name), 
            new lego_moveableobject("sb02", this.parent.name), 
            new lego_moveableobject("sb03", this.parent.name), 
            new lego_moveableobject("sb04", this.parent.name), 
            new lego_moveableobject("sb05", this.parent.name), 
            new lego_moveableobject("sb06", this.parent.name), 
            new lego_moveableobject("sb07", this.parent.name) ];
        var3 = 0;
        while ((this.blocks.__length - 1) >= var3) {
            this.blocks[var3].initfull("iblk", "Root/data/levels/lev4/maz1");
            this.blocks[var3].setresponse(3, 0, 3);
            var3 = var3 + 1;
        }
        var3 = 0;
        while ((this.icicles.__length - 1) >= var3) {
            this.icicles[var3].initfull();
            this.icicles[var3].setbouncefactor(0.01);
            this.icicles[var3].setbounceeventrepoert(1);
            var3 = var3 + 1;
        }
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var1 = 0;
        while ((this.icicles.__length - 1) >= var1) {
            this.icicles.cleanupfull();
            this.icicles[var1] = null;
            var1 = var1 + 1;
        }
        this.icicles = null;
        this.falltimer.cleanupfull();
        this.falltimer = null;
        var1 = 0;
        while ((this.savecam.__length - 1) >= var1) {
            this.savecam[var1] = null;
            var1 = var1 + 1;
        }
        this.savecam = null;
        this.boulder.cleanupfull();
        this.boulder = null;
        var1 = 0;
        while ((this.bats.__length - 1) >= var1) {
            this.bats[var1].cleanupfull();
            this.bats[var1] = null;
            var1 = var1 + 1;
        }
        this.bats = null;
        var1 = 0;
        while ((this.blocks.__length - 1) >= var1) {
            this.blocks[var1].cleanupfull();
            this.blocks[var1] = null;
            var1 = var1 + 1;
        }
        this.blocks = null;
        return null;
    }
    
    method show() {
        var var1;
        this.boulder.show();
        var1 = 0;
        while ((this.bats.__length - 1) >= var1) {
            this.bats[var1].show();
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.blocks.__length - 1) >= var1) {
            this.blocks[var1].show();
            if (var1 == 0) {
                this.blocks[var1].setposition(434.7, 0 - 56.8, 0 - 480.2);
                this.blocks[var1].setorientation(0.0, 22.0, 0.0);
            }
            else if (var1 == 1) {
                this.blocks[var1].setposition(429.2, 0 - 55.6, 0 - 493.7);
                this.blocks[var1].setorientation(0.0, 22.0, 0.0);
            }
            else if (var1 == 2) {
                this.blocks[var1].setposition(401.0, 0 - 52.4, 0 - 521.6);
                this.blocks[var1].setorientation(0.0, 65.0, 0.0);
            }
            else if (var1 == 3) {
                this.blocks[var1].setposition(387.7, 0 - 51.3, 0 - 527.8);
                this.blocks[var1].setorientation(0.0, 64.0, 0.0);
            }
            else if (var1 == 4) {
                this.blocks[var1].setposition(344.3, 0 - 42.7, 0 - 474.9);
                this.blocks[var1].setorientation(0.0, 42.0, 0.0);
            }
            else if (var1 == 5) {
                this.blocks[var1].setposition(354.5, 0 - 42.2, 0 - 464.1);
                this.blocks[var1].setorientation(0.0, 39.0, 0.0);
            }
            else if (var1 == 6) {
                this.blocks[var1].setposition(367.9, 0 - 41.0, 0 - 448.8);
                this.blocks[var1].setorientation(0.0, 37.0, 0.0);
            }
            else if (var1 == 7) {
                this.blocks[var1].setposition(383.7, 0 - 40.0, 0 - 433.6);
                this.blocks[var1].setorientation(0.0, 50.0, 0.0);
            }
            var1 = var1 + 1;
        }
        this.cheat();
        return null;
    }
    
    method hide() {
        var var1;
        var1 = 0;
        while ((this.bats.__length - 1) >= var1) {
            this.bats[var1].hide();
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.blocks.__length - 1) >= var1) {
            this.blocks[var1].hide();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method onevent(param1) {
        var var1;
        if (param1.eventid == 1) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                if (param1.args[1] == this.boulder.id) {
                    globalclass.player.actor.react(0, 4, this.boulder.id);
                }
                param1.args[1];
            }
            param1.args[0];
            var1 = 0;
            while ((this.blocks.__length - 1) >= var1) {
                if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                    if (param1.args[1] == this.blocks[var1].id) {
                        globalclass.player.actor.react(0, 4, this.blocks[var1].id);
                    }
                    param1.args[1];
                }
                param1.args[0];
                var1 = var1 + 1;
            }
        }
        else if (param1.eventid == 4) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tp05")) {
                if (param1.args[1] == 0) {
                    if (this.planeoff) {
                        debug::print("*** HIT THE TRIGGER PLANE");
                        this.dropboulder(1);
                        this.planeoff = 0;
                    }
                }
            }
            param1.args[0];
        }
        else if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tb00")) {
                globalclass.player.kill();
                globalclass.player.actor.setinputstate("none");
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("tb01")) {
                globalclass.player.kill();
                globalclass.player.actor.setinputstate("none");
            }
        }
        else if (param1.eventid == 27) {
            globalclass.player.unkill();
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("k000"));
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tb00"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tb01"), 0);
        }
        else if (param1.eventid == 17) {
            if (param1.args[0] == this.boulder.id) {
                if (param1.args[1] >= 21) {
                    this.parent.level.cam.shakecamera(0.13, 0.4);
                    this.boulder.chasetoa(14.0);
                }
            }
            if (param1.args[1] >= 10) {
                var1 = 0;
                while ((this.icicles.__length - 1) >= var1) {
                    if (param1.args[0] == this.icicles[var1].id) {
                        this.icicles[var1].fadeout(2.5);
                    }
                    param1.args[0];
                    var1 = var1 + 1;
                }
            }
        }
        else if (param1.eventid == 14) {
            if (this.camstate == 1) {
                this.boulder.setmoveableflags(1, 1, 0, 1);
            }
            if (this.camstate == 2) {
                this.parent.level.cam.setaimode(11);
            }
        }
        else if (param1.eventid == 8) {
            if (param1.args[0] == this.falltimer.id) {
                this.camstate = 2;
                this.parent.level.cam.interpolate(365.0, 0 - 13.7, 0 - 587.4, 333.0, 1.4, 0 - 501.5, 2.0);
            }
            param1.args[0];
        }
        else if (param1.eventid == 7) {
            if (param1.args[2] == scslosifoundation::stringtoidentifier("Ecut")) {
                gcstaticsoundsptrarray::playtablesound(144);
            }
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 80) {
            if (param1.event == 2) {
                this.cheat();
            }
        }
        if (param1.button == 49) {
            if (param1.event == 2) {
                this.nextice();
            }
        }
        if (param1.button == 50) {
            if (param1.event == 2) {
                this.iceshake(this.incme);
            }
        }
        return null;
    }
    
    method process(param1) {
        if (this.shake) {
            
        }
        return null;
    }
    
    method cheat() {
        var var1;
        var1 = 0;
        while ((this.blocks.__length - 1) >= var1) {
            if (var1 == 0) {
                this.blocks[var1].setslidetimer(13.0, 0.0, 0.0, 1.0, -1, 0.5);
            }
            else if (var1 == 1) {
                this.blocks[var1].setslidetimer(13.0, 0.0, 0.0, 1.1, -1, 0.5);
            }
            else if (var1 == 2) {
                this.blocks[var1].setslidetimer(13.0, 0.0, 0.0, 1.2, -1, 0.4);
            }
            else if (var1 == 3) {
                this.blocks[var1].setslidetimer(13.0, 0.0, 0.0, 0.9, -1, 0.8);
            }
            else if (var1 == 4) {
                this.blocks[var1].setslidetimer(0 - 13.0, 0.0, 0.0, 1.0, -1, 0.5);
            }
            else if (var1 == 5) {
                this.blocks[var1].setslidetimer(0 - 13.0, 0.0, 0.0, 1.1, -1, 0.5);
            }
            else if (var1 == 6) {
                this.blocks[var1].setslidetimer(0 - 13.0, 0.0, 0.0, 1.2, -1, 0.4);
            }
            else if (var1 == 7) {
                this.blocks[var1].setslidetimer(0 - 13.0, 0.0, 0.0, 0.9, -1, 0.8);
            }
            var1 = var1 + 1;
        }
        return null;
    }
    
    method nextice() {
        return null;
    }
    
    method dropboulder(param1) {
        var var1;
        var var2;
        var var3;
        var var4;
        var var5;
        var var6;
        if (param1 == 1) {
            var1 = this.parent.level.cam.getpositionx();
            var2 = this.parent.level.cam.getpositiony();
            var3 = this.parent.level.cam.getpositionz();
            var4 = this.parent.level.cam.getforwardx();
            var5 = this.parent.level.cam.getforwardy();
            var6 = this.parent.level.cam.getforwardz();
            this.savecam = [ var1, 
                var2, 
                var3, 
                var4, 
                var5, 
                var6 ];
            this.parent.level.cam.setaimode(0);
            this.camstate = 1;
            this.parent.level.cam.interpolate(350.5, 0 - 1.9, 0 - 523.5, 336.1, 109.6, 0 - 534.4, 2.0);
            this.falltimer.reset(0);
            this.falltimer.start();
        }
        return null;
    }
    
    method iceshake(param1) {
        return null;
    }
}