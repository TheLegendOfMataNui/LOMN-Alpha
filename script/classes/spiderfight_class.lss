class spiderfight_class {
    property parent;
    property spider;
    property hits;
    property showspider;
    property mask;
    property web1;
    property statetimer;
    property spitballs;
    property curspitball;
    property webtimers;
    property bgmusic;
    property showintro;
    property desctext;
    property howtotext;
    
    method spiderfight_class(param1) {
        this.parent = param1;
        this.showspider = 1;
        return null;
    }
    
    method initfull() {
        var var1;
        var var4;
        var var5;
        this.webtimers = [ new lego_timer("wbt0", 4.0, 0), 
            new lego_timer("wbt1", 4.0, 0), 
            new lego_timer("wbt2", 4.0, 0), 
            new lego_timer("wbt3", 4.0, 0), 
            new lego_timer("wbt4", 4.0, 0), 
            new lego_timer("wbt5", 4.0, 0), 
            new lego_timer("wbt6", 4.0, 0), 
            new lego_timer("wbt7", 4.0, 0), 
            new lego_timer("wbt8", 4.0, 0), 
            new lego_timer("wbt9", 4.0, 0) ];
        this.spitballs = [ new lego_bossprojectile("spb0"), 
            new lego_bossprojectile("spb1"), 
            new lego_bossprojectile("spb2"), 
            new lego_bossprojectile("spb3"), 
            new lego_bossprojectile("spb4"), 
            new lego_bossprojectile("spb5"), 
            new lego_bossprojectile("spb6"), 
            new lego_bossprojectile("spb7"), 
            new lego_bossprojectile("spb8"), 
            new lego_bossprojectile("spb9") ];
        this.curspitball = 0;
        var1 = 0;
        while ((this.spitballs.__length - 1) >= var1) {
            this.spitballs[var1].init("Root/data/art/spriteanims/fireball", "firebll", 50.0, 24, 2.0, 0.75, 30.0);
            this.webtimers[var1].initfull();
            var1 = var1 + 1;
        }
        this.web1 = new lego_moveableobject("web1", this.parent.name, [ "weba" ]);
        this.web1.initfull();
        this.web1.setresponse(3, 3, 3);
        this.bgmusic = new legomp3player();
        this.bgmusic.setupforplay("Root/Data/sounds/MUSICOnuaThemeMusic");
        this.bgmusic.play(1);
        this.spider = new gs_lego_character("cnyz", "bspd", this.parent.name, 0, 396.0, 0 - 60.0, 0 - 214.0, "aiin");
        this.spider.initfull();
        this.spider.add();
        this.spider.show();
        gccharactermoveinterpreter::checkanimdone(scslosifoundation::stringtoidentifier("s010"));
        if (gcsaver::findmask(scslosifoundation::stringtoidentifier("mskc")) == 0) {
            this.mask = new lego_pickup("mskc", 7, 1, "item", 4, 1);
            this.mask.initfull();
            this.mask.show();
        }
        if (this.showspider == 1) {
            this.web1.show();
        }
        else {
            this.web1.hide();
        }
        this.statetimer = 0.0;
        if (gcsaver::isconditionset(536870912)) {
            this.showintro = 0;
        }
        else {
            this.showintro = 1;
            var4 = gcareadirector::getscriptstring(scslosifoundation::stringtoidentifier("boss"), 2, 0);
            this.desctext = new gs_legotext("Root/Data/Art/Fonts/BionicleFontHi", var4, screenx * 0.5, screeny - 130, 0, 1, 256, 0, 0);
            this.desctext.initfull();
            var5 = (screeny - 100) + 20;
            var4 = gcareadirector::getscriptstring(scslosifoundation::stringtoidentifier("boss"), 2, 1);
            this.howtotext = new gs_legotext("Root/Data/Art/Fonts/BionicleFont", var4, screenx * 0.5, var5, 0, 1, 256, 0, 0);
            this.howtotext.initfull();
        }
        return null;
    }
    
    method playintro() {
        this.parent.level.cam.makespline("Root/Data/Levels/lev1/spcv/spcv_CAM.slb");
        this.parent.level.cam.setspline(0, 10.0, 1, 0);
        this.parent.level.cam.setaimode(2);
        this.parent.level.cam.settargetpos(396.0, 0 - 60.0, 0 - 214.0);
        this.parent.level.cam.scaletocutscene();
        globalclass.hud.hide();
        gcsaver::setcondition(536870912, 1);
        this.desctext.add();
        this.desctext.show();
        this.howtotext.add();
        this.howtotext.show();
        this.showintro = 0;
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var var2;
        this.spider.cleanupfull();
        this.spider = null;
        if (this.desctext != null) {
            this.desctext.cleanupfull();
            this.desctext = null;
        }
        if (this.howtotext != null) {
            this.howtotext.cleanupfull();
            this.howtotext = null;
        }
        if (this.spitballs != null) {
            var1 = this.spitballs.__length - 1;
            var2 = 0;
            while (var1 >= var2) {
                this.spitballs[var1 - var2] = null;
                var2 = var2 + 1;
            }
        }
        if (this.bgmusic != null) {
            this.bgmusic.stop();
            this.bgmusic.cleanupfordestroy();
            this.bgmusic = null;
        }
        if (this.mask != null) {
            this.mask.cleanupfull();
            this.mask = null;
        }
        if (this.web1 != null) {
            this.web1.cleanupfull();
            this.web1 = null;
        }
        if (this.webtimers != null) {
            var1 = this.webtimers.__length - 1;
            var2 = 0;
            while (var1 >= var2) {
                this.webtimers[var1 - var2].cleanupfull();
                this.webtimers[var1 - var2] = null;
                var2 = var2 + 1;
            }
        }
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method input(param1) {
        if (param1.event == 2) {
            if (param1.button == 67) {
                this.firespitball();
            }
        }
        return null;
    }
    
    method onevent(param1) {
        var var1;
        if (param1.eventid == 44) {
            if (this.showintro) {
                this.playintro();
            }
        }
        else if (param1.eventid == 6) {
            this.parent.level.cam.setaimode(11);
            this.parent.level.cam.resetviewport();
            globalclass.hud.show();
            this.desctext.hide();
            this.howtotext.hide();
        }
        else if (param1.eventid == 11) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnyz")) {
                if (param1.args[1] == scslosifoundation::stringtoidentifier("s010")) {
                    this.firespitball();
                }
            }
        }
        else if (param1.eventid == 8) {
            var1 = 0;
            while ((this.webtimers.__length - 1) >= var1) {
                if (param1.args[0] == this.webtimers[var1].id) {
                    this.spitballs[var1].kill();
                }
                param1.args[0];
                var1 = var1 + 1;
            }
        }
        else if (param1.eventid == 43) {
            if (param1.args[0] == this.spider.id) {
                this.web1.fadeout(3.0);
                this.web1.setresponse(4, 4, 4);
            }
        }
        else if (param1.eventid == 35) {
            if ((param1.args[0] == this.web1.id) && (param1.args[1] == 0)) {
                this.web1.hide();
            }
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("o000"));
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
        }
        else if (param1.eventid == 19) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                debug::print("Got projectile collision with fireball!");
                globalclass.player.actor.react(0, 2, param1.args[0]);
                var1 = 0;
                while ((this.spitballs.__length - 1) >= var1) {
                    if (param1.args[1] == this.spitballs[var1].id) {
                        this.spitballs[var1].kill();
                        debug::print("found spitball ID");
                    }
                    var1 = var1 + 1;
                }
            }
        }
        return null;
    }
    
    method firespitball() {
        this.spitballs[this.curspitball].launch(scslosifoundation::stringtoidentifier("cnyz"), 2.0);
        this.webtimers[this.curspitball].reset(0);
        this.webtimers[this.curspitball].start();
        this.curspitball = this.curspitball + 1;
        if (this.curspitball > (this.spitballs.__length - 1)) {
            this.curspitball = 0;
        }
        return null;
    }
}