class ta086_puzzle {
    property parent;
    property checkifsurfingabilityneedstobeset;
    property setsurfing;
    property firefountains;
    property music;
    
    method ta086_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        globalclass.settestforlavacollisions(0);
        this.firefountains = [ new lego_moveableobject("fp01"), 
            new lego_moveableobject("fp02"), 
            new lego_moveableobject("fp04"), 
            new lego_moveableobject("fp05"), 
            new lego_moveableobject("fp06"), 
            new lego_moveableobject("fp07"), 
            new lego_moveableobject("fp08"), 
            new lego_moveableobject("fp09"), 
            new lego_moveableobject("fp10"), 
            new lego_moveableobject("fp11") ];
        var1 = 0;
        while ((this.firefountains.__length - 1) >= var1) {
            this.firefountains[var1].initfull();
            this.firefountains[var1].setresponse(1, 1, 1);
            var1 = var1 + 1;
        }
        this.checkifsurfingabilityneedstobeset = 1;
        this.setsurfing = 0;
        this.music = new legomp3player();
        this.music.setupforplay("Root/Data/sounds/MUSICsurfandsnowboard");
        this.music.play(1);
        return null;
    }
    
    method show() {
        return null;
    }
    
    method hide() {
        var var1;
        this.setsurfmode(0);
        globalclass.settestforlavacollisions(1);
        globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("t000"));
        globalclass.player.actor.setforwardvelocity(0.0);
        this.checkifsurfingabilityneedstobeset = null;
        this.setsurfing = null;
        var1 = 0;
        while ((this.firefountains.__length - 1) >= var1) {
            this.firefountains[var1].cleanupfull();
            this.firefountains[var1] = null;
            var1 = var1 + 1;
        }
        this.firefountains = null;
        this.music.stop();
        this.music.cleanupfordestroy();
        this.music = null;
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method process(param1) {
        if (this.checkifsurfingabilityneedstobeset) {
            if (globalclass.player.actor.getpos().y1 <= (0 - 24.24)) {
                this.setsurfing = 1;
            }
        }
        if (this.setsurfing) {
            this.checkifsurfingabilityneedstobeset = 0;
            this.setsurfing = 0;
            debug::print("setting anim to surf.............................................");
            this.setsurfmode(1);
        }
        return null;
    }
    
    method setsurfmode(param1) {
        if (param1) {
            debug::print("starting surfing");
            globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("t038"));
            globalclass.player.actor.setsurfingability(0.9, 0.8);
            globalclass.player.actor.setsurfminspeed(30.0);
            globalclass.player.actor.setsurfmaxspeed(60.0);
            globalclass.player.actor.setsurffallgravity(0.8);
            globalclass.player.actor.setforwardvelocity(2);
            globalclass.player.actor.setclimb(5);
            globalclass.player.actor.addpart("tahu/xs/surf", "surf");
        }
        else {
            globalclass.player.actor.setsurfingability(0.0, 0.0);
            globalclass.player.actor.removepart("surf");
        }
        return null;
    }
    
    method onevent(param1) {
        var var1;
        if (param1.eventid == 1) {
            var1 = 0;
            while ((this.firefountains.__length - 1) >= var1) {
                if (param1.args[1] == this.firefountains[var1].id) {
                    debug::print("You hit a pillar........" + __tostring(this.firefountains[var1].name));
                    globalclass.player.actor.react(0, 3, this.firefountains[var1].id);
                    globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("t038"));
                }
                var1 = var1 + 1;
            }
        }
        else if (param1.eventid == 42) {
            
        }
        else if (param1.eventid == 46) {
            gccollisionphysicsgroup::spinmask(1.2);
            this.music.stop();
        }
        else if (param1.eventid == 27) {
            debug::print("***********ANIMATION SHOULD BE CHANGED BACK TO IDLE******************");
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("t000"));
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
            this.checkifsurfingabilityneedstobeset = 1;
            this.setsurfing = 0;
            this.setsurfmode(0);
            this.music.play(1);
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 67) {
            if (param1.event == 2) {
                this.cheat();
            }
        }
        return null;
    }
    
    method cheat() {
        return null;
    }
}