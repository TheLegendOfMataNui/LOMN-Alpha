class ta096_puzzle {
    property parent;
    property music;
    property surfboard;
    
    method ta096_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        this.setsurfmode(0);
        this.music = new legomp3player();
        this.music.setupforplay("Root/Data/sounds/MUSICsurfandsnowboard");
        this.music.play(1);
        this.surfboard = new lego_moveableobject("surf");
        return null;
    }
    
    method show() {
        return null;
    }
    
    method hide() {
        this.setsurfmode(0);
        this.music.stop();
        this.music.cleanupfordestroy();
        this.music = null;
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 1010) {
            if (param1.args[0]) {
                debug::print("***************Setting mask of levitation ability*****************");
                globalclass.player.actor.activatelevitation(1);
            }
            else {
                globalclass.player.actor.activatelevitation(0);
            }
        }
        else if (param1.eventid == 42) {
            
        }
        else if (param1.eventid == 46) {
            this.music.stop();
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("t000"));
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
            this.music.play(1);
            this.surfboard.show();
            this.setsurfmode(0);
        }
        else if (param1.eventid == 1) {
            if ((param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) && (param1.args[1] == scslosifoundation::stringtoidentifier("surf"))) {
                this.setsurfmode(1);
                this.surfboard.hide();
            }
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 67) {
            if (param1.event == 2) {
                this.cheat();
            }
        }
        return null;
    }
    
    method setsurfmode(param1) {
        if (param1) {
            debug::print("starting surfing");
            globalclass.player.actor.setsurfingability(2.0, 0.8);
            globalclass.player.actor.setsurfminspeed(45.0);
            globalclass.player.actor.setsurfmaxspeed(60.0);
            globalclass.player.actor.addpart("tahu/xs/surf", "surf");
            globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("t038"));
        }
        else {
            globalclass.player.actor.setsurfingability(0.0, 0.0);
            globalclass.player.actor.removepart("surf");
            globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("t000"));
        }
        return null;
    }
    
    method cheat(param1) {
        return null;
    }
}