class ptv2_puzzle {
    property parent;
    property cinema_shown;
    property cinema;
    property pushblock;
    property blockplane;
    
    method ptv2_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        this.cinema_shown = 0;
        this.cinema = gccinemaengine::create();
        gccinemaengine::load(this.cinema, "cin6");
        var1 = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vlgr"), 0);
        gccharacter::settohunga(var1, rgba(102, 0, 102, 255), rgba(102, 0, 102, 255), scslosifoundation::stringtoidentifier("mk6a"));
        this.pushblock = new lego_moveableobject("bldd", this.parent.name);
        this.pushblock.initfull();
        this.pushblock.setresponse(1, 1, 1);
        this.pushblock.disablecollisions();
        this.blockplane = new lego_triggerobject("tp02", this.parent.name);
        this.blockplane.initfull();
        this.blockplane.setresponse(1, 1);
        return null;
    }
    
    method cleanupfull() {
        this.cinema = null;
        if (!(this.pushblock == null)) {
            this.pushblock.cleanupfull();
            this.pushblock = null;
        }
        if (!(this.blockplane == null)) {
            this.blockplane.cleanupfull();
            this.blockplane = null;
        }
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tb00")) {
                globalclass.player.kill();
                gcstaticsoundsptrarray::playtablesound(737);
                this.parent.level.cam.setaimode(7);
                gccollisionphysicsgroup::spinmask(1.2);
            }
        }
        else if (param1.eventid == 4) {
            if (this.cinema_shown == 0) {
                if (param1.args[0] == scslosifoundation::stringtoidentifier("tp02")) {
                    if ((globalclass.player.whichmaskonface() == 0) && (globalclass.player.ismaskpoweron() == 1)) {
                        globalclass.hud.hide();
                        gccinemaengine::play(this.cinema);
                        this.cinema_shown = 1;
                        this.blockplane.setresponse(4, 4);
                        this.pushblock.enablecollisions();
                    }
                }
            }
        }
        else if (param1.eventid == 30) {
            debug::print("[][][] cinema done.  where's my hud?!!!");
            globalclass.hud.show();
            globalclass.hud.slideall(1);
        }
        else if (param1.eventid == 46) {
            gccollisionphysicsgroup::spinmask(1.2);
        }
        else if (param1.eventid == 27) {
            globalclass.player.unkill();
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("o000"));
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tb00"), 0);
        }
        return null;
    }
    
    method input(param1) {
        return null;
    }
}