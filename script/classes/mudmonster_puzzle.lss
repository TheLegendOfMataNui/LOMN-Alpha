class mudmonster_puzzle {
    property parea;
    property mudmonster;
    property mudtimer;
    property mudpos;
    property mudhits;
    property attacking;
    property reacting;
    property bgmusic;
    property thrown;
    property titletext1;
    property titletext2;
    property turaga;
    property turagashown;
    property mudmandead;
    property stone;
    
    method mudmonster_puzzle(param1) {
        this.parea = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        this.mudmonster = new mudmonster(this);
        this.mudmonster.init();
        gccharacter::setshadowtype(this.mudmonster.handle, 0);
        this.turaga = new gs_lego_character("when", "when", "fake", -90, 995, 0, 212, "aiin");
        this.turaga.initfull();
        this.turaga.add();
        this.turaga.hide();
        this.turaga.settweakable();
        this.bgmusic = new legomp3player();
        this.bgmusic.setupforplay("Root/Data/sounds/MUSICTechnoAmbience");
        gccharactermoveinterpreter::checkanimdone(1831874615);
        gccharactermoveinterpreter::checkanimdone(1831874864);
        gccharactermoveinterpreter::checkanimdone(1831874617);
        this.mudmandead = 0;
        gccollisionphysicsgroup::turnoffnextarea(scslosifoundation::stringtoidentifier("tpm1"));
        var1 = gccollisionphysicsgroup::gettriggerplane(scslosifoundation::stringtoidentifier("tpm1"));
        gctriggerplane::setplaneresponses(var1, 3, 3);
        var1 = gccollisionphysicsgroup::gettriggerplane(scslosifoundation::stringtoidentifier("tpm2"));
        gctriggerplane::setplaneresponses(var1, 3, 3);
        this.stone = new lego_pickup("ston", 0, 4, "item", 13, 0);
        this.stone.initfull();
        this.stone.obj.setpos(1121, 1.2, 216);
        gcareadirector::setnearestmax(50);
        this.initshort();
        return null;
    }
    
    method initshort() {
        this.mudmonster.initshort();
        this.bgmusic.stop();
        this.bgmusic.play(1);
        this.setupstrings();
        this.mudpos = 1;
        this.mudhits = 0;
        this.mudtimer = 0;
        this.attacking = 0;
        this.reacting = 0;
        this.turagashown = 0;
        return null;
    }
    
    method exit() {
        this.parea = null;
        return null;
    }
    
    method cleanupfull() {
        this.mudmonster.cleanupfull();
        this.mudmonster = null;
        this.mudtimer = null;
        this.mudpos = null;
        this.mudhits = null;
        this.attacking = null;
        this.reacting = null;
        this.bgmusic.stop();
        this.bgmusic = null;
        this.stone.cleanupfull();
        this.stone = null;
        return null;
    }
    
    method setupstrings() {
        var var1;
        var var2;
        var var3;
        var var4;
        var1 = gcareadirector::getscriptstring(1651471219, 3, 0);
        var2 = gcareadirector::getscriptstring(1651471219, 3, 1);
        var3 = (screeny - 100) + 20;
        var4 = (screeny - 100) + 40;
        this.titletext1 = new gs_legotext("Root/Data/Art/Fonts/BionicleFont", var1, screenx * 0.5, var3, 0, 2.0, 256, 0, 0);
        this.titletext2 = new gs_legotext("Root/Data/Art/Fonts/BionicleFont", var2, screenx * 0.5, var4, 0, 2.0, 256, 0, 0);
        return null;
    }
    
    method showstrings() {
        this.titletext1.initfull();
        this.titletext2.initfull();
        this.titletext1.add();
        this.titletext2.add();
        this.titletext1.show();
        this.titletext2.show();
        return null;
    }
    
    method cleanupstrings() {
        this.titletext1.remove();
        this.titletext2.remove();
        this.titletext1.cleanupfull();
        this.titletext2.cleanupfull();
        this.titletext1 = null;
        this.titletext2 = null;
        return null;
    }
    
    method process(param1) {
        var var1;
        var var2;
        var var3;
        var var4;
        var var5;
        var1 = 11;
        this.mudtimer = this.mudtimer + param1.deltatime;
        if (this.mudmonster.mudstate == 6) {
            if (this.mudtimer > 3) {
                var2 = this.mudmonster.getposx();
                var3 = this.mudmonster.getposy();
                var4 = this.mudmonster.getposz();
                this.parea.level.cam.interpolate(var2 - 30, var3 + 10, var4, var2, var3 + 10, var4, 3);
                this.mudmonster.mudstate = 5;
            }
        }
        else if (this.mudmonster.mudstate == 7) {
            if (this.mudtimer > 2) {
                this.parea.level.cam.setaimode(11);
                this.mudtimer = 0;
                this.mudmonster.mudstate = 0;
                this.cleanupstrings();
            }
        }
        else if (this.mudmonster.mudstate == 0) {
            if ((this.mudtimer > 7) && (this.attacking == 0)) {
                debug::print("+ morph down");
                if (this.mudhits == 4) {
                    this.mudtimer = 2;
                }
                else {
                    this.mudtimer = 0;
                }
                this.mudmonster.morph(1, this.mudhits);
                this.mudmonster.show();
                this.mudmonster.mudstate = 1;
                gccharacter::setshadowtype(this.mudmonster.handle, 0);
            }
            else if (this.mudtimer > 2) {
                if (this.attacking == 0) {
                    debug::print("+ throw");
                    this.mudmonster.throw();
                    this.attacking = 1;
                    this.thrown = 0;
                }
            }
        }
        else if (this.mudmonster.mudstate == 1) {
            if (this.mudtimer > 3) {
                this.mudtimer = 0;
                this.mudmonster.mudstate = 0;
                this.mudmonster.morph(0, this.mudhits);
                this.mudmonster.show();
                debug::print("setting state = UP");
            }
        }
        else if (this.mudmonster.mudstate == 2) {
            if ((this.mudtimer > 5) && (this.reacting == 0)) {
                debug::print("no longer stunned");
                this.mudmonster.mudstate = 0;
                this.mudtimer = 2;
                this.mudmonster.aiidle();
            }
        }
        else if (this.mudmonster.mudstate == 3) {
            this.mudtimer = 0;
            this.attacking = 0;
            this.mudmonster.mudstate = 1;
            gccharactermoveinterpreter::stopcheckanimdone(1831874611);
            debug::print("Setting state = DOWN");
        }
        else if (this.mudmonster.mudstate == 4) {
            if (this.turagashown == 1) {
                this.turaga.watch();
            }
        }
        else if (this.mudmonster.mudstate == 8) {
            
        }
        else if (this.mudmonster.mudstate == 9) {
            if (this.attacking == 0) {
                var5 = 1831874864;
                if (var1 == 0) {
                    var1 = globalclass.randnum.getrandomnumber(0, 10);
                    if (var1 == 0) {
                        var5 = 1831874617;
                    }
                }
                debug::print("DROP ATTACK!");
                this.mudmonster.setsplitanimation(var5, -1);
                this.mudmonster.dropmudballs();
                this.attacking = 1;
            }
        }
        else if (this.mudmonster.mudstate == 10) {
            if (this.mudtimer > 2) {
                globalclass.player.actor.idle();
                this.parea.level.cam.setaimode(11);
                this.mudmonster.mudstate = 11;
            }
        }
        return null;
    }
    
    method input(param1) {
        if (param1.event == 2) {
            if (param1.button == 80) {
                this.endarea();
            }
            else if (param1.button == 79) {
                this.mudmonster.mudstate = 2;
                this.vinegrab();
            }
        }
        return null;
    }
    
    method onevent(param1) {
        this.mudmonster.onevent(param1);
        if (param1.eventid == 46) {
            gccollisionphysicsgroup::spinmask(1.2);
        }
        else if (param1.eventid == 7) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnyy")) {
                if (param1.args[2] == scslosifoundation::stringtoidentifier("Fprj")) {
                    debug::print((("ANIMATION EVENT : " + scslosifoundation::identifiertostring(param1.args[0])) + ":") + scslosifoundation::identifiertostring(param1.args[1]));
                    this.mudmonster.releasemudball(this.mudhits);
                    this.thrown = 1;
                }
            }
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                if (param1.args[1] == scslosifoundation::stringtoidentifier("o019")) {
                    this.earthquake();
                }
            }
        }
        else if (param1.eventid == 11) {
            if ((param1.args[1] == 1831874864) || (param1.args[1] == 1831874617)) {
                if (this.mudmonster.mudstate == 5) {
                    this.mudmonster.aiidle();
                    this.mudtimer = 0;
                    this.mudmonster.mudstate = 7;
                    debug::print("setting mudstate to ready");
                }
                else {
                    debug::print("setting mudstate to up");
                    if (this.mudmonster.mudstate == 9) {
                        this.attacking = 0;
                        this.mudtimer = 1;
                    }
                    else {
                        this.mudtimer = 0;
                    }
                    this.mudmonster.mudstate = 0;
                }
            }
            else if (param1.args[1] == 1831874611) {
                this.mudmonster.morph(3, this.mudhits);
                this.mudmonster.mudstate = 3;
                this.reacting = 0;
                debug::print("Setting mud state to M_HIT");
                if (this.mudhits == 4) {
                    this.parea.level.cam.setaimode(11);
                }
            }
            else if (param1.args[1] == 1831874615) {
                this.attacking = 0;
            }
        }
        else if (param1.eventid == 14) {
            this.parea.level.cam.setaimode(0);
            if (this.mudhits == 4) {
                this.mudmonster.setsplitanimation(1831874611, -1);
            }
            else {
                this.attacking = 0;
                this.mudmonster.morph(0, this.mudhits);
                this.mudmonster.show();
                this.mudtimer = 0;
                this.mudmonster.setevilpermanent(0);
                this.showstrings();
            }
        }
        else if (param1.eventid == 13) {
            if (this.mudmonster.mudstate == 5) {
                this.mudmonster.setsplitanimation(1831874864, -1);
                this.mudtimer = 0;
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("mudm")) {
                if (this.mudhits == 5) {
                    this.endarea();
                }
                else if ((this.mudmonster.mudstate == 1) || (this.mudmonster.mudstate == 3)) {
                    debug::print("Hiding monster");
                    this.mudmonster.hide();
                    this.mudpos = globalclass.randnum.getrandomnumber(1, 3);
                    if (this.mudpos == 1) {
                        this.mudmonster.setpos(995, 0, 212);
                    }
                    else if (this.mudpos == 2) {
                        this.mudmonster.setpos(991, 0, 191);
                    }
                    else if (this.mudpos == 3) {
                        this.mudmonster.setpos(999, 0, 246);
                    }
                }
                else {
                    debug::print("Setting monster to watch");
                    this.mudmonster.watch();
                    gccharacter::setshadowtype(this.mudmonster.handle, 2);
                    if (this.mudhits == 4) {
                        this.mudtimer = 2;
                    }
                    else {
                        this.mudtimer = 0;
                    }
                    this.attacking = 0;
                }
            }
        }
        else if (param1.eventid == 19) {
            debug::print("proj-col : " + scslosifoundation::identifiertostring(param1.args[0]));
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnyy")) {
                this.reacting = this.vinegrab();
            }
        }
        else if (param1.eventid == 4) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tpm0")) {
                if (this.mudmandead == 1) {
                    gccollisionphysicsgroup::spinmask(1.2);
                }
            }
        }
        else if (param1.eventid == 27) {
            if (this.mudmandead == 1) {
                
            }
            else {
                this.initshort();
                globalclass.player.actor.gotopos(this.parea.enterstartid, this.parea.enterlookid);
                globalclass.player.unkill();
                globalclass.player.actor.idle();
                globalclass.player.actor.setinputstate("ninp");
            }
        }
        return null;
    }
    
    method endarea() {
        var var1;
        this.mudmonster.die();
        gctransdirector::hide(scslosifoundation::stringtoidentifier("mwf0"), 0);
        this.bgmusic.stop();
        this.bgmusic = null;
        var1 = gccollisionphysicsgroup::gettriggerplane(scslosifoundation::stringtoidentifier("tpm2"));
        gctriggerplane::setplaneresponses(var1, 4, 4);
        this.parea.level.cam.setaimode(0);
        this.parea.level.cam.setpos(985, 2, 212);
        this.parea.level.cam.settargetpos(995, 2, 212);
        this.turaga.show();
        this.turaga.disableai();
        this.mudtimer = 0;
        this.mudmonster.mudstate = 10;
        return null;
    }
    
    method earthquake() {
        if (this.mudmonster.mudstate == 0) {
            this.mudmonster.mudstate = 2;
            this.mudmonster.aistun(0);
            this.mudtimer = 0;
            debug::print("You stunned 'im just as 'e wuz wakin' up!");
        }
        return null;
    }
    
    method vinegrab() {
        var var1;
        debug::print("VineGrab");
        if (this.mudmonster.mudstate == 2) {
            this.mudhits = this.mudhits + 1;
            if (this.mudhits == 4) {
                this.mudmonster.mudstate = 6;
                this.mudtimer = 3;
            }
            else {
                this.mudmonster.aireact(1, 10, 0, 0);
                debug::print("Reacting");
            }
            gccharactermoveinterpreter::checkanimdone(1831874611);
            return 1;
        }
        else {
            if ((this.mudmonster.mudstate == 0) && (this.thrown == 1)) {
                var1 = globalclass.randnum.getrandomnumber(0, 10);
                if (var1 > 1) {
                    this.mudmonster.setsplitanimation(1831874864);
                }
                else {
                    this.mudmonster.setsplitanimation(1831874617);
                }
                this.mudmonster.mudstate = 8;
            }
            return 0;
        }
        return null;
    }
}