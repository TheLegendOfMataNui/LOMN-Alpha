class acmaskpuzzle {
    property parea;
    property bully;
    property mask;
    property cinema1;
    property cinema2;
    property cinema1_shown;
    property cinema2_shown;
    property bgmusic;
    property showpickup;
    property founditem;
    property wallchunks;
    
    method acmaskpuzzle(param1) {
        this.parea = param1;
        this.mask = null;
        this.cinema1_shown = 0;
        this.cinema2_shown = 0;
        this.showpickup = 1;
        return null;
    }
    
    method initfull() {
        var var1;
        this.bully = this.parea.level.createbull(this.parea.name);
        gccharacter::aisetbecomeshappy(this.bully.handle, 0);
        this.bully.setpos(109.0, 1.0, 169.0);
        gccharacter::addmask(this.bully.handle, scslosifoundation::stringtoidentifier("mklf"), "mask");
        gccharacter::addmask(this.bully.handle, scslosifoundation::stringtoidentifier("mkrt"), "mask");
        gccharacter::switchmask(this.bully.handle, scslosifoundation::stringtoidentifier("mklf"));
        gccharacter::switchsecondmask(this.bully.handle, scslosifoundation::stringtoidentifier("mkrt"));
        gccharactermoveinterpreter::checkanimdone(scslosifoundation::stringtoidentifier("p047"));
        this.founditem = gcsaver::findmask(scslosifoundation::stringtoidentifier("mska"));
        if (this.founditem) {
            this.showpickup = 0;
        }
        if (this.showpickup) {
            this.mask = new lego_pickup("mska", 10, 1, "item", 1, 1);
            this.mask.initfull();
            this.mask.show();
        }
        if (this.cinema1_shown == 0) {
            this.cinema1 = gccinemaengine::create();
            gccinemaengine::load(this.cinema1, "cin2");
        }
        if (this.cinema2_shown == 0) {
            this.cinema2 = gccinemaengine::create();
            gccinemaengine::load(this.cinema2, "cin3");
        }
        this.wallchunks = [ new lego_moveableobject("brk1"), 
            new lego_moveableobject("brk2"), 
            new lego_moveableobject("brk3"), 
            new lego_moveableobject("brk4"), 
            new lego_moveableobject("brk5"), 
            new lego_moveableobject("brk6"), 
            new lego_moveableobject("brk7"), 
            new lego_moveableobject("brk8"), 
            new lego_moveableobject("brk9") ];
        var1 = 0;
        while ((this.wallchunks.__length - 1) >= var1) {
            this.wallchunks[var1].initfull();
            this.wallchunks[var1].setresponse(1, 1, 1);
            var1 = var1 + 1;
        }
        return null;
    }
    
    method show() {
        this.bgmusic = new legomp3player();
        this.bgmusic.setupforplay("Root/Data/sounds/MUSICpohatutheme");
        this.bgmusic.play(1);
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var1 = 0;
        while ((this.wallchunks.__length - 1) >= var1) {
            this.wallchunks[var1].cleanupfull();
            this.wallchunks[var1] = null;
            var1 = var1 + 1;
        }
        this.wallchunks = null;
        if (this.mask != null) {
            this.mask.cleanupfull();
            this.mask = null;
        }
        this.founditem = null;
        this.showpickup = null;
        this.bully = null;
        this.cinema1 = null;
        this.cinema2 = null;
        if (this.bgmusic != null) {
            this.bgmusic.stop();
            this.bgmusic = null;
        }
        return null;
    }
    
    method process(param1) {
        var var1;
        var var2;
        if (this.cinema2_shown == 0) {
            if (globalclass.player.ismaskpoweron() == 1) {
                if (globalclass.player.whichmaskonface() == 10) {
                    var1 = this.bully.getpos();
                    var2 = globalclass.player.actor.getpos();
                    if (((((var1.x1 - var2.x1) < 10) && ((var1.x1 - var2.x1) > -10)) && ((var1.z - var2.z) < 10)) && ((var1.z - var2.z) > -10)) {
                        globalclass.hud.hide();
                        gccinemaengine::play(this.cinema2);
                        this.cinema2_shown = 1;
                    }
                }
            }
        }
        return null;
    }
    
    method input(param1) {
        if (param1.event == 2) {
            if (param1.button == 255) {
                if (this.cinema1 != null) {
                    gccinemaengine::stop(this.cinema1);
                }
                else if (this.cinema2 != null) {
                    gccinemaengine::stop(this.cinema2);
                }
            }
        }
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tb00")) {
                globalclass.player.kill();
            }
        }
        else if (param1.eventid == 11) {
            if (scslosifoundation::identifiertostring(param1.args[1]) == "p047") {
                this.mask.hide();
                globalclass.hud.hide();
                gccinemaengine::play(this.cinema1);
                this.cinema1_shown = 1;
                this.bully.aiidle();
                this.bully.setpos(109.0, 1.0, 169.0);
                this.bully.disableanim(scslosifoundation::stringtoidentifier("bl08"));
                this.bully.disableanim(scslosifoundation::stringtoidentifier("bl09"));
                this.bully.aipatrol();
            }
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parea.enterstartid, this.parea.enterlookid);
            globalclass.player.unkill();
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tb00"), 0);
            globalclass.player.actor.setinputstate("ninp");
            this.parea.level.cam.setaimode(11);
        }
        else if (param1.eventid == 30) {
            globalclass.hud.show();
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cin3")) {
                gcbagroup::setswitchareas(scslosifoundation::stringtoidentifier("blr1"), scslosifoundation::stringtoidentifier("str0"), scslosifoundation::stringtoidentifier("lok0"));
            }
        }
        return null;
    }
    
    method exit() {
        this.parea = null;
        return null;
    }
}