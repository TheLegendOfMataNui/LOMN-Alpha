class mask {
    property maskname;
    property maskid;
    property powerdrainrate;
    property selectable;
    
    method mask(param1, param2) {
        this.maskid = scslosifoundation::stringtoidentifier(param1);
        this.maskname = param2;
        this.powerdrainrate = 0.0;
        this.selectable = 0;
        return null;
    }
    
    method add() {
        gctoa::addmask(globalclass.player.actor.toahandle, this.maskid, "john pruden");
        if (this.maskname == 7) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask8", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 3;
        }
        else if (this.maskname == 0) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask1", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 5;
        }
        else if (this.maskname == 8) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask9", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 3;
        }
        else if (this.maskname == 9) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask10", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 3;
        }
        else if (this.maskname == 1) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask2", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 0.8;
        }
        else if (this.maskname == 10) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask11", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 3;
        }
        else if (this.maskname == 2) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask3", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 3;
        }
        else if (this.maskname == 11) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask12", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 3;
        }
        else if (this.maskname == 3) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask4", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 1;
        }
        else if (this.maskname == 4) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask5", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 1;
        }
        else if (this.maskname == 12) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask13", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 3;
        }
        else if (this.maskname == 5) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask6", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 3;
        }
        else if (this.maskname == 6) {
            globalclass.hud.mask.addmask(new gs_lego_animatesprite("Root/data/art/hud/maskrotate/mask7", 0, 23, 1, 0, 0, 0, 0, 0));
            this.powerdrainrate = 3;
        }
        return null;
    }
    
    method setselectable(param1) {
        this.selectable = param1;
        return null;
    }
    
    method activate(param1) {
        var var1;
        if (param1 == null) {
            param1 = 1;
        }
        if (param1) {
            gcstaticsoundsptrarray::playtablesound(759);
            gcstaticsoundsptrarray::playtablesound(758, 1);
        }
        else {
            gcstaticsoundsptrarray::stoptablesound(758);
        }
        gccharacter::setmaskactive(globalclass.player.actor.handle, param1);
        if (this.maskname == 7) {
            if (param1) {
                gccharacter::settransparency(globalclass.player.actor.handle, 0.6);
            }
            else {
                gccharacter::settransparency(globalclass.player.actor.handle, 1.0);
            }
        }
        else if (this.maskname == 0) {
            
        }
        else if (this.maskname == 8) {
            if (param1) {
                gclightdirector::setnightvisionlighting(1);
            }
            else {
                gclightdirector::setnightvisionlighting(0);
            }
        }
        else if (this.maskname == 9) {
            gcsaver::setcondition(4194304, param1);
        }
        else if (this.maskname == 1) {
            if (param1) {
                gccharacter::setwatertimerlength(globalclass.player.actor.handle, 0);
            }
            else {
                gccharacter::setwatertimerlength(globalclass.player.actor.handle, 10);
            }
        }
        else if (this.maskname == 10) {
            if (param1) {
                debug::print("MofAC Activated");
            }
            else {
                debug::print("MofAC Deactivated");
            }
        }
        else if (this.maskname == 2) {
            if (param1) {
                globalclass.player.actor.setanimationscalar(2.5);
            }
            else {
                globalclass.player.actor.setanimationscalar(1);
            }
        }
        else if (this.maskname == 11) {
            if (param1) {
                globalclass.player.actor.telekineticgrab();
                globalclass.player.actor.disableanim(scslosifoundation::stringtoidentifier("k003"));
                globalclass.player.actor.disableanim(scslosifoundation::stringtoidentifier("o013"));
                globalclass.player.actor.disableanim(scslosifoundation::stringtoidentifier("k001"));
                globalclass.player.actor.disableanim(scslosifoundation::stringtoidentifier("k002"));
                globalclass.player.actor.disableanim(scslosifoundation::stringtoidentifier("k028"));
                globalclass.player.actor.disableanim(scslosifoundation::stringtoidentifier("k029"));
            }
            else {
                globalclass.player.actor.telekineticdrop();
                var1 = new scriptevent(1001);
                var1.send();
                globalclass.player.actor.enableanim(scslosifoundation::stringtoidentifier("k003"));
                globalclass.player.actor.enableanim(scslosifoundation::stringtoidentifier("o013"));
                globalclass.player.actor.enableanim(scslosifoundation::stringtoidentifier("k001"));
                globalclass.player.actor.enableanim(scslosifoundation::stringtoidentifier("k002"));
                globalclass.player.actor.enableanim(scslosifoundation::stringtoidentifier("k028"));
                globalclass.player.actor.enableanim(scslosifoundation::stringtoidentifier("k029"));
            }
        }
        else if (this.maskname == 3) {
            if (param1) {
                var1 = new scriptevent(1002, [ 1 ]);
                var1.send();
            }
            else {
                var1 = new scriptevent(1002, [ 0 ]);
                var1.send();
            }
        }
        else if (this.maskname == 4) {
            if (param1) {
                var1 = new scriptevent(1010, [ 1 ]);
                var1.send();
                globalclass.player.actor.activatelevitation(1);
            }
            else {
                var1 = new scriptevent(1010, [ 0 ]);
                var1.send();
                globalclass.player.actor.activatelevitation(0);
            }
        }
        else if (this.maskname == 12) {
            if (param1) {
                globalclass.player.actor.activateillusion();
            }
            else {
                globalclass.player.actor.deactivateillusion();
            }
        }
        else if (this.maskname == 5) {
            if (param1) {
                debug::print("setting up mask of time");
                gcbagroup::userealtimefortoa(1);
                scprocessmanager::userealdeltatime(0);
                scprocessmanager::setfakedeltatime(0.018);
            }
            else {
                gcbagroup::userealtimefortoa(0);
                scprocessmanager::userealdeltatime(1);
                scprocessmanager::setfakedeltatime(0.033333);
            }
        }
        else if (this.maskname == 6) {
            
        }
        return null;
    }
    
    method deactivate() {
        this.activate(0);
        return null;
    }
}