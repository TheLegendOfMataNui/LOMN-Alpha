class tp026_puzzle {
    property parent;
    property boulders;
    property floors;
    property stairs;
    property hitflooronce;
    property startnextboulders;
    property state;
    property deleteme;
    property boulderhit;
    property canmoveout;
    property incrementor;
    property stairhit;
    property origx;
    property origy;
    property origz;
    property glyph;
    property music;
    
    method tp026_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var var2;
        gcareadirector::setnearestmax(39);
        this.glyph = new lego_pickup("glyp", 18, 2, "item", 5, 1);
        this.glyph.initfull();
        if (gcsaver::findglyph(scslosifoundation::stringtoidentifier("glyp"))) {
            this.glyph.hide();
        }
        else {
            this.glyph.show();
        }
        this.state = 2;
        this.deleteme = 0;
        this.incrementor = 1;
        this.hitflooronce = 1;
        this.canmoveout = 1;
        this.origx = [  ];
        this.origy = [  ];
        this.origz = [  ];
        this.stairhit = [ 1, 
            1, 
            1, 
            1, 
            1, 
            1, 
            1 ];
        this.boulderhit = [ 0, 
            0, 
            0, 
            0, 
            0, 
            0, 
            0, 
            0, 
            0, 
            0, 
            0, 
            0 ];
        this.boulders = [ new lego_moveableobject("bl01"), 
            new lego_moveableobject("bl02"), 
            new lego_moveableobject("bl03"), 
            new lego_moveableobject("bl04"), 
            new lego_moveableobject("bl05"), 
            new lego_moveableobject("bl06"), 
            new lego_moveableobject("bl07"), 
            new lego_moveableobject("bl08"), 
            new lego_moveableobject("bl09"), 
            new lego_moveableobject("bl10"), 
            new lego_moveableobject("bl11"), 
            new lego_moveableobject("bl12") ];
        var1 = 0;
        while ((this.boulders.__length - 1) >= var1) {
            this.boulders[var1].initfull("bl00", "Root/data/levels/lev6/tp02", 0 - 3.0, 0 - 3.0, 0 - 3.0, 3.0, 3.0, 3.0);
            this.boulders[var1].setmoveable(3.0, 0.1, 0, 0, 0, 0);
            this.boulders[var1].setpos(400, 400, 400);
            var1 = var1 + 1;
        }
        this.floors = [ new lego_moveableobject("ds00"), 
            new lego_moveableobject("ds01"), 
            new lego_moveableobject("ds02"), 
            new lego_moveableobject("ds03"), 
            new lego_moveableobject("ds04"), 
            new lego_moveableobject("ds05"), 
            new lego_moveableobject("ds06"), 
            new lego_moveableobject("ds07"), 
            new lego_moveableobject("ds08"), 
            new lego_moveableobject("ds09"), 
            new lego_moveableobject("ds10"), 
            new lego_moveableobject("ds11"), 
            new lego_moveableobject("ds12"), 
            new lego_moveableobject("ds13"), 
            new lego_moveableobject("ds14"), 
            new lego_moveableobject("ds15"), 
            new lego_moveableobject("ds16"), 
            new lego_moveableobject("ds17"), 
            new lego_moveableobject("ds18"), 
            new lego_moveableobject("ds19"), 
            new lego_moveableobject("ds20") ];
        var1 = 0;
        while ((this.floors.__length - 1) >= var1) {
            this.floors[var1].initfull();
            this.floors[var1].setresponse(0, 0, 0);
            this.floors[var1].setmoveable(1.0, 0.1, 0, 0, 0, 0);
            this.floors[var1].setobjgravity(72.0);
            var2 = this.floors[var1].getx();
            this.origx.__append(var2);
            var2 = this.floors[var1].gety();
            this.origy.__append(var2);
            var2 = this.floors[var1].getz();
            this.origz.__append(var2);
            var1 = var1 + 1;
        }
        this.stairs = [ new lego_moveableobject("st00"), 
            new lego_moveableobject("st01"), 
            new lego_moveableobject("st02"), 
            new lego_moveableobject("st03"), 
            new lego_moveableobject("st04"), 
            new lego_moveableobject("st05"), 
            new lego_moveableobject("st06") ];
        var1 = 0;
        while ((this.stairs.__length - 1) >= var1) {
            this.stairs[var1].initfull();
            this.stairs[var1].setresponse(0, 0, 0);
            this.stairs[var1].settweakable();
            var1 = var1 + 1;
        }
        this.startnextboulders = new lego_timer("blfl", 5.0, 0);
        this.startnextboulders.initfull();
        this.music = new legomp3player();
        this.music.setupforplay("Root/Data/sounds/MusicLewaDrumandBass");
        this.music.play(1);
        return null;
    }
    
    method show() {
        var var1;
        var1 = 0;
        while ((this.boulders.__length - 1) >= var1) {
            this.boulders[var1].show();
            if (var1 >= 2) {
                this.boulders[var1].hide();
            }
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.floors.__length - 1) >= var1) {
            this.floors[var1].show();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method initshort() {
        var var1;
        var1 = 0;
        while ((this.floors.__length - 1) >= var1) {
            this.floors[var1].setpos(this.origx[var1], this.origy[var1], this.origz[var1]);
            this.floors[var1].setorientation(0.0, 0.0, 0.0);
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.boulders.__length - 1) >= var1) {
            this.boulders[var1].setpos(400, 400, 400);
            this.boulders[var1].setmoveableflags(0, 0, 0, 0);
            var1 = var1 + 1;
        }
        this.startnextboulders.stop();
        this.startnextboulders.reset(0);
        this.hitflooronce = 1;
        this.state = 2;
        this.music.play(1);
        return null;
    }
    
    method hide() {
        var var1;
        var var2;
        var1 = 0;
        while ((this.boulders.__length - 1) >= var1) {
            this.boulders[var1].cleanupfull();
            this.boulders[var1] = null;
            var1 = var1 + 1;
        }
        this.boulders = null;
        var1 = 0;
        while ((this.floors.__length - 1) >= var1) {
            this.floors[var1].cleanupfull();
            this.floors[var1] = null;
            var1 = var1 + 1;
        }
        this.floors = null;
        var1 = 0;
        while ((this.stairs.__length - 1) >= var1) {
            this.stairs[var1].cleanupfull();
            this.stairs[var1] = null;
            var1 = var1 + 1;
        }
        this.stairs = null;
        var2 = null;
        this.startnextboulders.cleanupfull();
        this.startnextboulders = null;
        this.state = null;
        this.deleteme = null;
        var1 = 0;
        while ((this.boulderhit.__length - 1) >= var1) {
            this.boulderhit[var1] = null;
            var1 = var1 + 1;
        }
        this.boulderhit = null;
        this.canmoveout = null;
        this.incrementor = null;
        var1 = 0;
        while ((this.stairhit.__length - 1) >= var1) {
            this.stairhit[var1] = null;
            var1 = var1 + 1;
        }
        this.stairhit = null;
        this.origx = null;
        this.origy = null;
        this.origz = null;
        this.glyph = null;
        this.music.stop();
        this.music.cleanupfordestroy();
        this.music = null;
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method process(param1) {
        if ((((((((((this.boulderhit[0] && this.boulderhit[1]) && this.boulderhit[2]) && this.boulderhit[3]) && this.boulderhit[4]) && this.boulderhit[6]) && this.boulderhit[7]) && this.boulderhit[8]) && this.boulderhit[9]) && this.boulderhit[10]) && this.boulderhit[11]) {
            if (this.canmoveout) {
                this.movestairsout(0);
                this.canmoveout = 0;
            }
        }
        return null;
    }
    
    method onevent(param1) {
        var var1;
        var var2;
        var var3;
        if (param1.eventid == 46) {
            gccollisionphysicsgroup::spinmask(1.2);
            this.music.stop();
        }
        else if (param1.eventid == 27) {
            this.initshort();
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
        }
        else if (param1.eventid == 1) {
            var1 = 0;
            while ((this.boulders.__length - 1) >= var1) {
                if (param1.args[0] == this.boulders[var1].id) {
                    var2 = 0;
                    while ((this.floors.__length - 1) >= var2) {
                        if (param1.args[1] == this.floors[var2].id) {
                            this.dropground();
                        }
                        param1.args[1];
                        var2 = var2 + 1;
                    }
                }
                param1.args[0];
                var1 = var1 + 1;
            }
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                if (this.hitflooronce) {
                    var1 = 0;
                    while ((this.floors.__length - 1) >= var1) {
                        if (param1.args[1] == this.floors[var1].id) {
                            this.startthepounding(1);
                        }
                        param1.args[1];
                        var1 = var1 + 1;
                    }
                    this.hitflooronce = 0;
                }
                var1 = 0;
                while ((this.stairs.__length - 1) >= var1) {
                    if (param1.args[1] == this.stairs[var1].id) {
                        if (this.stairhit[var1]) {
                            var3 = var1 + 1;
                            if (var3 > (this.stairs.__length - 1)) {
                                
                            }
                            else {
                                debug::print(("****MOVING STAIRS[" + __tostring(var3)) + "] OUT****");
                                this.movestairsout(var3);
                            }
                            this.stairhit[var1] = 0;
                        }
                    }
                    param1.args[1];
                    var1 = var1 + 1;
                }
            }
            param1.args[0];
        }
        else if (param1.eventid == 8) {
            if (param1.args[0] == this.startnextboulders.id) {
                if (this.state == 2) {
                    this.startthepounding(2);
                    this.state = this.state + 1;
                }
                else if (this.state == 3) {
                    this.startthepounding(3);
                    this.state = this.state + 1;
                }
                else if (this.state == 4) {
                    this.startthepounding(4);
                    this.state = this.state + 1;
                }
            }
            param1.args[0];
        }
        else if (param1.eventid == 19) {
            var1 = 0;
            while ((this.boulders.__length - 1) >= var1) {
                if (param1.args[0] == this.boulders[var1].id) {
                    debug::print("******YOU HIT BOULDER " + __tostring(var1));
                    this.boulders[var1].fadeout(1.0);
                    this.boulderhit[var1] = 1;
                }
                param1.args[0];
                var1 = var1 + 1;
            }
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 89) {
            if (param1.event == 2) {
                this.cheat();
            }
        }
        return null;
    }
    
    method dropground() {
        var var1;
        var1 = 0;
        while ((this.floors.__length - 1) >= var1) {
            if (var1 <= 5) {
                this.floors[var1].setrollangle(9.0, 4.0, 0.0);
            }
            else if ((var1 > 5) && (var1 <= 10)) {
                this.floors[var1].setrollangle(0.0, 6.0, 8.0);
            }
            else {
                this.floors[var1].setrollangle(7.0, 0.0, 7.0);
            }
            this.floors[var1].setmoveableflags(1, 1, 0, 1);
            var1 = var1 + 1;
        }
        return null;
    }
    
    method startthepounding(param1) {
        var var1;
        if (param1 == 1) {
            var1 = 0;
            while (2 >= var1) {
                if (var1 == 0) {
                    this.boulders[var1].setpos(0.3, 74.3, 25.7);
                }
                else if (var1 == 1) {
                    this.boulders[var1].setpos(0 - 22.0, 84.6, 0 - 12.7);
                }
                else if (var1 == 2) {
                    this.boulders[var1].setpos(24.3, 79.5, 0 - 13.9);
                }
                this.boulders[var1].setmoveableflags(1, 1, 0, 1);
                var1 = var1 + 1;
            }
            this.startnextboulders.reset(0);
            this.startnextboulders.start();
        }
        else if (param1 == 2) {
            var1 = 3;
            while (5 >= var1) {
                if (var1 == 3) {
                    this.boulders[var1].setpos(0.3, 74.3, 25.7);
                }
                else if (var1 == 4) {
                    this.boulders[var1].setpos(0 - 22.0, 84.6, 0 - 12.7);
                }
                else if (var1 == 5) {
                    this.boulders[var1].setpos(24.3, 79.5, 0 - 13.9);
                }
                this.boulders[var1].show();
                this.boulders[var1].setmoveableflags(1, 1, 0, 1);
                var1 = var1 + 1;
            }
            this.startnextboulders.reset(0);
            this.startnextboulders.start();
        }
        else if (param1 == 3) {
            var1 = 6;
            while (8 >= var1) {
                if (var1 == 6) {
                    this.boulders[var1].setpos(0.3, 74.3, 25.7);
                }
                else if (var1 == 7) {
                    this.boulders[var1].setpos(0 - 22.0, 84.6, 0 - 12.7);
                }
                else if (var1 == 8) {
                    this.boulders[var1].setpos(24.3, 79.5, 0 - 13.9);
                }
                this.boulders[var1].show();
                this.boulders[var1].setmoveableflags(1, 1, 0, 1);
                var1 = var1 + 1;
            }
            this.startnextboulders.reset(0);
            this.startnextboulders.start();
        }
        else if (param1 == 4) {
            var1 = 9;
            while (11 >= var1) {
                if (var1 == 9) {
                    this.boulders[var1].setpos(0.3, 74.3, 25.7);
                }
                else if (var1 == 10) {
                    this.boulders[var1].setpos(0 - 22.0, 84.6, 0 - 12.7);
                }
                else if (var1 == 11) {
                    this.boulders[var1].setpos(24.3, 79.5, 0 - 13.9);
                }
                this.boulders[var1].show();
                this.boulders[var1].setmoveableflags(1, 1, 0, 1);
                var1 = var1 + 1;
            }
        }
        return null;
    }
    
    method movestairsout(param1) {
        var var1;
        var1 = param1;
        if (var1 == 0) {
            this.stairs[var1].interpolate(0.0, 3.2, 0 - 22.4, 1.3);
        }
        else if (var1 == 1) {
            this.stairs[var1].interpolate(0 - 6.8, 6.4, 0 - 21.2, 1.3);
        }
        else if (var1 == 2) {
            this.stairs[var1].interpolate(0 - 12.7, 9.7, 0 - 16.3, 1.3);
        }
        else if (var1 == 3) {
            this.stairs[var1].interpolate(0 - 21.3, 9.7, 0 - 4.4, 1.3);
        }
        else if (var1 == 4) {
            this.stairs[var1].interpolate(0 - 18.9, 13.0, 3.9, 1.3);
        }
        else if (var1 == 5) {
            this.stairs[var1].interpolate(0 - 16.8, 16.3, 11.7, 1.3);
        }
        else if (var1 == 6) {
            this.stairs[var1].interpolate(0 - 10.9, 19.6, 17.0, 1.3);
        }
        return null;
    }
    
    method cheat() {
        var var1;
        var1 = 0;
        while ((this.boulderhit.__length - 1) >= var1) {
            this.boulderhit[var1] = 1;
            var1 = var1 + 1;
        }
        return null;
    }
}