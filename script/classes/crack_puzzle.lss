class crack_puzzle {
    property parent;
    property crackparts;
    property crackdefaults;
    property cracktimer;
    property crackplane;
    property edoor;
    property edoortext;
    property edoortexttimer;
    property edoorplane;
    property mdoors;
    property doscreen;
    property bgmusic;
    property showdemoover;
    property crackstate;
    property showedoor;
    property showhookdoor;
    property showbugsdoor;
    
    method crack_puzzle(param1) {
        this.parent = param1;
        this.crackstate = 0;
        this.doscreen = new lego_demoover();
        return null;
    }
    
    method initfull() {
        var var1;
        var var2;
        var var3;
        var var4;
        var var5;
        var var6;
        var var7;
        this.mdoors = [ new l1shrn_door("sdr4"), 
            new l1shrn_door("sdr3"), 
            new l1shrn_door("sdr1"), 
            new l1shrn_door("sdr0") ];
        var1 = 0;
        while ((this.mdoors.__length - 1) >= var1) {
            this.mdoors[var1].initfull();
            var1 = var1 + 1;
        }
        this.mdoors[0].show();
        this.mdoors[2].show();
        if (gcsaver::isconditionset(33554432)) {
            this.showbugsdoor = 0;
        }
        else {
            this.showbugsdoor = 1;
        }
        if (this.showbugsdoor) {
            this.mdoors[1].show();
        }
        else {
            this.mdoors[1].hide();
        }
        if (gcsaver::isconditionset(67108864)) {
            this.showhookdoor = 0;
        }
        else {
            this.showhookdoor = 1;
        }
        if (this.showhookdoor) {
            this.mdoors[3].show();
        }
        else {
            this.mdoors[3].hide();
        }
        if (gcsaver::isconditionset(16777216)) {
            this.crackstate = 5;
            this.crackparts = [ new lego_moveableobject("dp00", this.parent.name), 
                new lego_moveableobject("dp01", this.parent.name), 
                new lego_moveableobject("dp02", this.parent.name), 
                new lego_moveableobject("dp03", this.parent.name), 
                new lego_moveableobject("dp04", this.parent.name), 
                new lego_moveableobject("dp05", this.parent.name), 
                new lego_moveableobject("dp06", this.parent.name), 
                new lego_moveableobject("dp07", this.parent.name) ];
            var1 = 0;
            while ((this.crackparts.__length - 1) >= var1) {
                this.crackparts[var1].initfull();
                this.crackparts[var1].setresponse(4, 4, 4);
                this.crackparts[var1].hide();
                var1 = var1 + 1;
            }
            this.cracktimer = null;
            this.crackdefaults = null;
            this.crackplane = null;
            debug::print("crack already broken down.  do not show");
        }
        else {
            this.crackdefaults = [  ];
            this.cracktimer = 0.0;
            this.crackplane = new lego_triggerobject("tps7", this.parent.name);
            this.crackplane.initfull();
            this.crackplane.setresponse(3, 3);
            this.crackparts = [ new lego_moveableobject("dp00", this.parent.name), 
                new lego_moveableobject("dp01", this.parent.name), 
                new lego_moveableobject("dp02", this.parent.name), 
                new lego_moveableobject("dp03", this.parent.name), 
                new lego_moveableobject("dp04", this.parent.name), 
                new lego_moveableobject("dp05", this.parent.name), 
                new lego_moveableobject("dp06", this.parent.name), 
                new lego_moveableobject("dp07", this.parent.name) ];
            var1 = 0;
            while ((this.crackparts.__length - 1) >= var1) {
                this.crackparts[var1].initfull();
                this.crackparts[var1].setmoveable(2.0, 1.0, 0, 0, 0, 0);
                this.crackparts[var1].setresponse(4, 4, 4);
                this.crackparts[var1].setbounceeventrepoert(1);
                this.crackparts[var1].disablecollisions();
                var2 = [  ];
                var3 = this.crackparts[var1].getx();
                var4 = this.crackparts[var1].gety();
                var5 = this.crackparts[var1].getz();
                var2.__append(var3);
                var2.__append(var4);
                var2.__append(var5);
                this.crackdefaults.__append(var2);
                var1 = var1 + 1;
            }
        }
        this.showedoor = 1;
        this.edoor = new lego_moveableobject("mmdr", this.parent.name);
        this.edoor.initfull();
        if (this.showedoor) {
            this.edoor.show();
            this.edoor.setalpha(0.5);
        }
        else {
            this.edoor.hide();
        }
        this.edoor.disablecollisions();
        var6 = gcareadirector::getscriptfluffstringuint(scslosifoundation::stringtoidentifier("door"), 1, 0, 60);
        this.edoortext = new gs_legotext("Root/Data/Art/Fonts/BionicleFontHi", var6, screenx * 0.5, screeny * 0.83, 0, 1.5, 256, 4, 0);
        this.edoortext.initfull();
        this.edoortext.add();
        this.edoortexttimer = 0.0;
        var7 = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("when"), 0);
        gccharacter::setinputstate(var7, scslosifoundation::stringtoidentifier("none"));
        this.bgmusic = new legomp3player();
        this.bgmusic.setupforplay("Root/Data/sounds/MUSICShrine");
        this.bgmusic.play(1);
        this.showdemoover = 0;
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var var2;
        var var3;
        var1 = null;
        this.edoortexttimer = null;
        if (this.edoortext != null) {
            this.edoortext.remove();
            this.edoortext.cleanupfull();
            this.edoortext = null;
        }
        if (this.edoor != null) {
            this.edoor.cleanupfull();
            this.edoor = null;
        }
        this.showedoor = null;
        if (this.crackparts != null) {
            var2 = this.crackparts.__length - 1;
            var3 = 0;
            while (var2 >= var3) {
                this.crackparts[var2 - var3].cleanupfull();
                this.crackparts[var2 - var3] = null;
                var3 = var3 + 1;
            }
            this.crackparts = null;
        }
        this.crackdefaults = null;
        if (this.cracktimer != null) {
            this.cracktimer = null;
        }
        if (this.crackplane != null) {
            this.crackplane.cleanupfull();
            this.crackplane = null;
        }
        if (this.mdoors != null) {
            var2 = this.mdoors.__length - 1;
            var3 = 0;
            while (var2 >= var3) {
                this.mdoors[var2 - var3].cleanupfull();
                this.mdoors[var2 - var3] = null;
                var3 = var3 + 1;
            }
            this.mdoors = null;
        }
        if (this.doscreen != null) {
            this.doscreen.cleanupfull();
            this.doscreen = null;
        }
        if (this.bgmusic != null) {
            this.bgmusic.stop();
            this.bgmusic = null;
        }
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method input(param1) {
        if (param1.event == 2) {
            if (param1.button == 67) {
                if (this.crackstate == 5) {
                    this.resetcrack();
                }
            }
        }
        return null;
    }
    
    method process(param1) {
        if (this.crackstate == 0) {
            
        }
        else if (this.crackstate == 1) {
            this.crackplane.setresponse(4, 4);
            this.crackparts[0].setmoveableflags(1, 0, 0, 1);
            this.crackparts[1].setmoveableflags(1, 0, 0, 1);
            this.crackparts[0].setvelocity(-5, 1, 6);
            this.crackparts[1].setvelocity(5, 1, -6);
            this.cracktimer = 0;
            this.crackstate = 2;
        }
        else if (this.crackstate == 2) {
            this.cracktimer = this.cracktimer + param1.deltatime;
            if (this.cracktimer > 0.5) {
                this.crackparts[2].setmoveableflags(1, 0, 0, 1);
                this.crackparts[5].setmoveableflags(1, 0, 0, 1);
                this.crackparts[2].setvelocity(-4, 2, 4);
                this.crackparts[5].setvelocity(-5, 0, 4);
                this.cracktimer = 0;
                this.crackstate = 3;
            }
        }
        else if (this.crackstate == 3) {
            this.cracktimer = this.cracktimer + param1.deltatime;
            if (this.cracktimer > 0.5) {
                this.crackparts[3].setmoveableflags(1, 0, 0, 1);
                this.crackparts[6].setmoveableflags(1, 0, 0, 1);
                this.crackparts[3].setvelocity(3, 1, -6);
                this.crackparts[6].setvelocity(-2, 0, 4);
                this.cracktimer = 0;
                this.crackstate = 4;
            }
        }
        else if (this.crackstate == 4) {
            this.cracktimer = this.cracktimer + param1.deltatime;
            if (this.cracktimer > 0.5) {
                this.crackparts[4].setmoveableflags(1, 0, 0, 1);
                this.crackparts[7].setmoveableflags(1, 0, 0, 1);
                this.crackparts[4].setvelocity(2, 1, -2);
                this.crackparts[7].setvelocity(-1, 0, 1);
                this.cracktimer = 0;
                this.crackstate = 5;
                gcsaver::setcondition(16777216, 1);
            }
        }
        else if (this.crackstate == 5) {
            
        }
        if (this.edoortexttimer > 0) {
            this.edoortexttimer = this.edoortexttimer - param1.deltatime;
        }
        else if (this.edoortext.onscreen == 1) {
            this.edoortext.hide();
        }
        return null;
    }
    
    method onevent(param1) {
        var var1;
        if (param1.eventid == 17) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("dp00")) {
                var1 = 0;
                while ((this.crackparts.__length - 1) >= var1) {
                    this.crackparts[var1].fadeout(2.0);
                    this.crackparts[var1].setbounceeventrepoert(0);
                    var1 = var1 + 1;
                }
            }
        }
        else if (param1.eventid == 35) {
            if ((param1.args[0] == scslosifoundation::stringtoidentifier("dp00")) && (param1.args[1] == 0)) {
                debug::print("[][][] Hide all crack parts. Pronto!");
                var1 = 0;
                while ((this.crackparts.__length - 1) >= var1) {
                    this.crackparts[var1].hide();
                    var1 = var1 + 1;
                }
            }
            if (param1.args[0] == scslosifoundation::stringtoidentifier("mmdr")) {
                this.edoor.hide();
            }
        }
        else if (param1.eventid == 21) {
            if (param1.args[1] == scslosifoundation::stringtoidentifier("str6")) {
                this.mdoors[0].close();
            }
            else if (param1.args[1] == scslosifoundation::stringtoidentifier("str2")) {
                this.mdoors[2].close();
            }
            if (this.showbugsdoor) {
                if (globalclass.player.elementcontrol.isselectable(2)) {
                    this.mdoors[1].open();
                    this.showbugsdoor = 0;
                    gcsaver::setcondition(33554432, 1);
                }
            }
            if (this.showhookdoor) {
                if (globalclass.player.elementcontrol.isselectable(3)) {
                    this.mdoors[3].open();
                    this.showhookdoor = 0;
                    gcsaver::setcondition(67108864, 1);
                }
            }
        }
        else if (param1.eventid == 27) {
            globalclass.player.unkill();
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
        }
        else if (param1.eventid == 7) {
            if (param1.args[2] == scslosifoundation::stringtoidentifier("glyp")) {
                if (globalclass.player.whichelementchosen() == 4) {
                    if (this.crackstate == 0) {
                        this.earthquake();
                    }
                }
            }
        }
        else if (param1.eventid == 1) {
            if (param1.args[1] == scslosifoundation::stringtoidentifier("mmdr")) {
                if (this.showedoor == 1) {
                    if (globalclass.player.tokens >= 60) {
                        debug::print("[][][] dissolve the E-door");
                        this.edoor.fadeout(1.5);
                        gcstaticsoundsptrarray::playtablesound(766);
                        this.showedoor = 0;
                        this.edoortext.hide();
                    }
                    else {
                        this.edoortext.show();
                        this.edoortexttimer = 1.0;
                    }
                }
            }
        }
        else if (param1.eventid == 4) {
            
        }
        return null;
    }
    
    method earthquake() {
        this.crackstate = 1;
        this.edoor.enablecollisions();
        return null;
    }
    
    method resetcrack() {
        var var1;
        var var2;
        if (this.crackparts == null) {
            this.crackstate = 0;
            this.initfull();
        }
        else if (this.crackdefaults.__length == this.crackparts.__length) {
            this.crackstate = 0;
            var1 = 0;
            while ((this.crackdefaults.__length - 1) >= var1) {
                var2 = this.crackdefaults[var1];
                this.crackparts[var1].setstationary();
                this.crackparts[var1].setposition(var2[0], var2[1], var2[2]);
                var1 = var1 + 1;
            }
        }
        return null;
    }
}