class tp016_puzzle {
    property parent;
    property firehornet;
    property smallplatform;
    property largeplatform;
    property timer;
    property door;
    property landed;
    property attacktimer;
    property isflying;
    property glyph;
    property rotation;
    property hornetblobs;
    property whichblob;
    property hornetblobsubound;
    property music;
    property timerstarted;
    
    method tp016_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        this.glyph = new lego_pickup("glyp", 17, 2, "item", 4, 1);
        this.glyph.initfull();
        this.firehornet = new gs_lego_character("fhrn", "msqt", "fake", 0, 27.18, 22.7, 2.26, "aiin");
        this.firehornet.initfull();
        this.firehornet.add();
        this.firehornet.show();
        this.firehornet.disableai();
        this.hornetblobs = [ new lego_bossprojectile("spl1"), 
            new lego_bossprojectile("spl2"), 
            new lego_bossprojectile("spl3"), 
            new lego_bossprojectile("spl4"), 
            new lego_bossprojectile("spl5"), 
            new lego_bossprojectile("spl6"), 
            new lego_bossprojectile("spl7"), 
            new lego_bossprojectile("spl8"), 
            new lego_bossprojectile("spl9"), 
            new lego_bossprojectile("spla"), 
            new lego_bossprojectile("splb"), 
            new lego_bossprojectile("splc"), 
            new lego_bossprojectile("spld"), 
            new lego_bossprojectile("sple"), 
            new lego_bossprojectile("splf"), 
            new lego_bossprojectile("splg"), 
            new lego_bossprojectile("splh"), 
            new lego_bossprojectile("spli"), 
            new lego_bossprojectile("splj"), 
            new lego_bossprojectile("splk"), 
            new lego_bossprojectile("spll"), 
            new lego_bossprojectile("splm"), 
            new lego_bossprojectile("spln") ];
        var1 = 0;
        while ((this.hornetblobs.__length - 1) >= var1) {
            this.hornetblobs[var1].init("Root/data/art/spriteanims/waspspit", "ababy", 1000.0, 17, 2.0, 0.5, 40.0);
            var1 = var1 + 1;
        }
        this.whichblob = 0;
        this.hornetblobsubound = this.hornetblobs.__length - 1;
        var1 = 0;
        while ((this.hornetblobs.__length - 1) >= var1) {
            this.firehornet.ignorecollisionswith(this.hornetblobs[var1].id);
            var1 = var1 + 1;
        }
        this.largeplatform = new lego_moveableobject("pl00");
        this.smallplatform = new lego_moveableobject("pl01");
        this.door = new lego_moveableobject("drs1");
        this.largeplatform.initfull();
        this.smallplatform.initfull();
        this.door.initfull();
        this.largeplatform.setresponse(1, 0, 1);
        this.smallplatform.setresponse(1, 0, 1);
        this.isflying = 1;
        this.rotation = 0;
        this.music = new legomp3player();
        this.music.setupforplay("Root/Data/sounds/MUSICtahuTheme");
        this.music.play(1);
        this.timerstarted = 0;
        return null;
    }
    
    method hide() {
        var var1;
        this.firehornet.cleanupfull();
        this.firehornet = null;
        this.smallplatform.cleanupfull();
        this.smallplatform = null;
        this.largeplatform.cleanupfull();
        this.largeplatform = null;
        this.timer.cleanupfull();
        this.timer = null;
        this.door.cleanupfull();
        this.door = null;
        this.landed = null;
        this.attacktimer.cleanupfull();
        this.attacktimer = null;
        this.isflying = null;
        this.glyph = null;
        this.rotation = null;
        var1 = 0;
        while ((this.hornetblobs.__length - 1) >= var1) {
            this.hornetblobs[var1].cleanupfull();
            this.hornetblobs[var1] = null;
            var1 = var1 + 1;
        }
        this.hornetblobs = null;
        this.whichblob = null;
        this.hornetblobsubound = null;
        this.music.stop();
        this.music.cleanupfordestroy();
        this.music = null;
        this.timerstarted = null;
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method process(param1) {
        if (this.rotation >= 360) {
            this.rotation = 0;
        }
        else {
            this.rotation = this.rotation + 5;
        }
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 1) {
            
        }
        else if (param1.eventid == 12) {
            debug::print("Interp finished event...................");
            if (param1.args[0] == scslosifoundation::stringtoidentifier("pl00")) {
                debug::print("Move the small platform...............");
                this.smallplatform.interpolate(0 - 45.72, 8.6, 0.1, 2);
            }
        }
        else if (param1.eventid == 46) {
            gccollisionphysicsgroup::spinmask(1.2);
            this.music.stop();
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.idle();
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
            this.music.play(1);
        }
        else if (param1.eventid == 8) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("horn")) {
                if (this.landed == 1) {
                    this.landed = 0;
                    this.isflying = 1;
                    this.firehornet.aitakeoff();
                    this.timer.reset(0);
                    this.timer.setduration(15);
                    this.timer.start();
                }
                else {
                    this.landed = 1;
                    this.isflying = 0;
                    this.firehornet.ailand(100, 100);
                    this.timer.reset(0);
                    this.timer.setduration(5);
                    this.timer.start();
                }
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("atkt")) {
                if (this.isflying) {
                    this.whichblob = this.whichblob + 1;
                    if (this.whichblob > this.hornetblobsubound) {
                        this.whichblob = 0;
                    }
                }
                this.attacktimer.reset(0);
                this.attacktimer.start();
            }
        }
        else if (param1.eventid == 44) {
            if (this.timerstarted == 0) {
                this.timerstarted = 1;
                debug::print("*** strat timers");
                this.timer = new lego_timer("horn", 15, 0);
                this.timer.initfull();
                this.timer.reset(0);
                this.timer.start();
                this.landed = 0;
                this.attacktimer = new lego_timer("atkt", 2.0, 0);
                this.attacktimer.initfull();
                this.attacktimer.reset(0);
                this.attacktimer.start();
            }
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 67) {
            if (param1.event == 2) {
                this.cheat();
            }
        }
        return null;
    }
    
    method cheat() {
        if (this.hornetblobs[this.whichblob].handle == null) {
            debug::print("Yipes!!!!!!!!!!");
        }
        this.hornetblobs[this.whichblob].launch(scslosifoundation::stringtoidentifier("fhrn"), 0.0);
        this.whichblob = this.whichblob + 1;
        if (this.whichblob > this.hornetblobsubound) {
            this.whichblob = 0;
        }
        return null;
    }
}