class l4_maz2_puzzle {
    property parent;
    property blocks;
    property temporient0;
    property temporient1;
    property temporient2;
    property icicles;
    property bats;
    
    method l4_maz2_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        gcareadirector::setnearestmax(50);
        this.temporient0 = 0;
        this.temporient1 = 0;
        this.temporient2 = 0;
        this.bats = [ new gs_lego_character("ib00", "ibat", "maz1", 0, 104.4, 31.2, 0 - 586.2, "aiin"), 
            new gs_lego_character("ib01", "ibat", "maz1", 0, 8.0, 45.2, 0 - 605.5, "aiin"), 
            new gs_lego_character("ib02", "ibat", "maz1", 0, 0 - 30.5, 40.6, 0 - 424.7, "aiin"), 
            new gs_lego_character("ib03", "ibat", "maz1", 0, 54.6, 43.9, 0 - 399.2, "aiin"), 
            new gs_lego_character("ib04", "ibat", "maz1", 0, 125.9, 48.1, 0 - 431.2, "aiin") ];
        var1 = 0;
        while ((this.bats.__length - 1) >= var1) {
            this.bats[var1].initfull();
            this.bats[var1].add();
            this.bats[var1].settweakable();
            var1 = var1 + 1;
        }
        this.blocks = [ new lego_moveableobject("sn00", this.parent.name), 
            new lego_moveableobject("sn01", this.parent.name), 
            new lego_moveableobject("sn02", this.parent.name), 
            new lego_moveableobject("sn03", this.parent.name), 
            new lego_moveableobject("sn04", this.parent.name), 
            new lego_moveableobject("sn05", this.parent.name), 
            new lego_moveableobject("sn06", this.parent.name), 
            new lego_moveableobject("sn07", this.parent.name), 
            new lego_moveableobject("sn08", this.parent.name), 
            new lego_moveableobject("sn09", this.parent.name), 
            new lego_moveableobject("sn10", this.parent.name) ];
        var1 = 0;
        while ((this.blocks.__length - 1) >= var1) {
            this.blocks[var1].initfull("iblk", "Root/data/levels/lev4/maz1");
            var1 = var1 + 1;
        }
        this.icicles = [  ];
        var1 = 0;
        while ((this.icicles.__length - 1) >= var1) {
            this.icicles[var1].initfull();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var1 = 0;
        while ((this.bats.__length - 1) >= var1) {
            this.bats[var1].cleanupfull();
            this.bats[var1] = null;
            var1 = var1 + 1;
        }
        this.bats = null;
        var1 = 0;
        while ((this.blocks.__length - 1) >= var1) {
            this.blocks[var1].cleanupfull();
            this.blocks[var1] = null;
            var1 = var1 + 1;
        }
        this.blocks = null;
        var1 = 0;
        while ((this.icicles.__length - 1) >= var1) {
            this.icicles[var1].cleanupfull();
            this.icicles[var1] = null;
            var1 = var1 + 1;
        }
        this.icicles = null;
        return null;
    }
    
    method show() {
        var var1;
        var1 = 0;
        while ((this.bats.__length - 1) >= var1) {
            this.bats[var1].show();
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.blocks.__length - 1) >= var1) {
            this.blocks[var1].show();
            if (var1 == 0) {
                this.blocks[0].setposition(94.6, 1.3, 0 - 595.4);
                this.blocks[0].setorientation(0.0, 61.0, 0.0);
            }
            else if (var1 == 1) {
                this.blocks[1].setposition(71.9, 5.7, 0 - 601.0);
                this.blocks[1].setorientation(0.0, 81.0, 0.0);
            }
            else if (var1 == 2) {
                this.blocks[2].setposition(51.1, 8.2, 0 - 601.3);
                this.blocks[2].setorientation(0.0, 76.0, 0.0);
            }
            else if (var1 == 3) {
                this.blocks[3].setposition(28.2, 10.2, 0 - 607.1);
                this.blocks[3].setorientation(0.0, 74.0, 0.0);
            }
            else if (var1 == 4) {
                this.blocks[4].setposition(0 - 13.3, 8.3, 0 - 410.4);
                this.blocks[4].setorientation(0.0, 64.0, 0.0);
            }
            else if (var1 == 5) {
                this.blocks[5].setposition(5.8, 9.9, 0 - 403.4);
                this.blocks[5].setorientation(0.0, 69.0, 0.0);
            }
            else if (var1 == 6) {
                this.blocks[6].setposition(26.0, 10.9, 0 - 395.9);
                this.blocks[6].setorientation(0.0, 67.0, 0.0);
            }
            else if (var1 == 7) {
                this.blocks[7].setposition(132.3, 20.4, 0 - 438.5);
                this.blocks[7].setorientation(0.0, 3.0, 0.0);
            }
            else if (var1 == 8) {
                this.blocks[8].setposition(130.5, 20.1, 0 - 458.7);
                this.blocks[8].setorientation(0.0, 3.0, 0.0);
            }
            else if (var1 == 9) {
                this.blocks[9].setposition(130.6, 22.6, 0 - 479.5);
                this.blocks[9].setorientation(0.0, 170.0, 0.0);
            }
            else if (var1 == 10) {
                this.blocks[10].setorientation(0.0, 157.0, 0.0);
            }
            var1 = var1 + 1;
        }
        this.rotate1();
        return null;
    }
    
    method hide() {
        var var1;
        var1 = 0;
        while ((this.blocks.__length - 1) >= var1) {
            this.blocks[var1].hide();
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.bats.__length - 1) >= var1) {
            this.bats[var1].hide();
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.icicles.__length - 1) >= var1) {
            this.icicles[var1].hide();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method onevent(param1) {
        var var1;
        if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tb00")) {
                this.parent.level.cam.setaimode(7);
                gccollisionphysicsgroup::spinmask(0.5);
                globalclass.player.actor.setinputstate("none");
            }
            param1.args[0];
        }
        else if (param1.eventid == 27) {
            globalclass.player.kill();
        }
        else if (param1.eventid == 46) {
            globalclass.player.unkill();
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("k000"));
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tb00"), 0);
        }
        else if (param1.eventid == 1002) {
            if (param1.args[0] == 1) {
                var1 = 0;
                while ((this.blocks.__length - 1) >= var1) {
                    this.blocks[var1].fadeout(2.5);
                    var1 = var1 + 1;
                }
            }
            else if (param1.args[0] == 0) {
                var1 = 0;
                while ((this.blocks.__length - 1) >= var1) {
                    this.blocks[var1].fadein(2.5);
                    var1 = var1 + 1;
                }
            }
        }
        else if (param1.eventid == 7) {
            if (param1.args[2] == scslosifoundation::stringtoidentifier("Ecut")) {
                gcstaticsoundsptrarray::playtablesound(144);
            }
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 49) {
            if (param1.event == 4) {
                this.rotate1();
            }
        }
        if (param1.button == 50) {
            if (param1.event == 4) {
                this.rotate2();
            }
        }
        if (param1.button == 51) {
            if (param1.event == 4) {
                this.rotate3();
            }
        }
        if (param1.button == 52) {
            if (param1.event == 4) {
                this.rotate4();
            }
        }
        if (param1.button == 80) {
            if (param1.event == 2) {
                this.cheat();
            }
        }
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method rotate1() {
        var var1;
        var1 = 0;
        while ((this.blocks.__length - 1) >= var1) {
            if (var1 == 0) {
                this.blocks[0].setslidetimer(12.0, 0.0, 0.0, 1.0, -1, 0.5);
            }
            else if (var1 == 1) {
                this.blocks[1].setslidetimer(14.0, 0.0, 0.0, 1.4, -1, 0.5);
            }
            else if (var1 == 2) {
                this.blocks[2].setslidetimer(12.0, 0.0, 0.0, 1.2, -1, 0.5);
            }
            else if (var1 == 3) {
                this.blocks[3].setslidetimer(12.0, 0.0, 0.0, 1.0, -1, 0.5);
            }
            else if (var1 == 4) {
                this.blocks[4].setslidetimer(0 - 12.0, 0.0, 0.0, 1.2, -1, 0.3);
            }
            else if (var1 == 5) {
                this.blocks[5].setslidetimer(0 - 12.0, 0.0, 0.0, 1.3, -1, 0.3);
            }
            else if (var1 == 6) {
                this.blocks[6].setslidetimer(0 - 12.0, 0.0, 0.0, 1.2, -1, 0.3);
            }
            else if (var1 == 7) {
                this.blocks[7].setslidetimer(12.0, 0.0, 0.0, 1.0, -1, 0.2);
            }
            else if (var1 == 8) {
                this.blocks[8].setslidetimer(12.0, 0.0, 0.0, 1.1, -1, 0.2);
            }
            else if (var1 == 9) {
                this.blocks[9].setslidetimer(0 - 12.0, 0.0, 0.0, 1.2, -1, 0.2);
            }
            else if (var1 == 10) {
                this.blocks[10].setslidetimer(0 - 12.0, 0.0, 0.0, 1.1, -1, 0.2);
            }
            var1 = var1 + 1;
        }
        return null;
    }
    
    method rotate2() {
        if (this.temporient1 >= 360) {
            this.temporient1 = 0;
        }
        else {
            this.temporient1 = this.temporient1 + 1;
        }
        this.blocks[8].setorientation(0.0, this.temporient1, 0.0);
        debug::print("Orientation = " + __tostring(this.temporient1));
        return null;
    }
    
    method rotate3() {
        if (this.temporient2 >= 360) {
            this.temporient2 = 0;
        }
        else {
            this.temporient2 = this.temporient2 + 1;
        }
        this.blocks[9].setorientation(0.0, this.temporient2, 0.0);
        debug::print("Orientation = " + __tostring(this.temporient2));
        return null;
    }
    
    method rotate4() {
        if (this.temporient2 >= 360) {
            this.temporient2 = 0;
        }
        else {
            this.temporient2 = this.temporient2 + 1;
        }
        this.blocks[10].setorientation(0.0, this.temporient2, 0.0);
        debug::print("Orientation = " + __tostring(this.temporient2));
        return null;
    }
    
    method cheat() {
        globalclass.player.addmask("msk1", 3);
        return null;
    }
}