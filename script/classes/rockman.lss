class rockman {
    property parent;
    property rocks;
    property currentrock;
    property areaid;
    property rocky;
    property curstate;
    property setgravity;
    
    method rockman(param1) {
        this.areaid = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        this.rocks = [ new lego_projectileobject("rk01", this.areaid), 
            new lego_projectileobject("rk02", this.areaid), 
            new lego_projectileobject("rk03", this.areaid), 
            new lego_projectileobject("rk04", this.areaid) ];
        this.rocky = new gs_lego_character("stnr", "rkmn", this.areaid, -180, 752, 0.5, 0 - 429.51, "aiin");
        this.rocky.initfull();
        this.rocky.add();
        this.rocky.show();
        this.rocky.disableai();
        gccharacter::setshadowtype(this.rocky.handle, 2);
        this.rocky.ignorecollisionswith(scslosifoundation::stringtoidentifier("flr1"));
        this.rocky.ignorecollisionswith(scslosifoundation::stringtoidentifier("flr2"));
        this.rocky.ignorecollisionswith(scslosifoundation::stringtoidentifier("flr3"));
        this.rocky.ignorecollisionswith(scslosifoundation::stringtoidentifier("flr4"));
        this.rocky.ignorecollisionswith(scslosifoundation::stringtoidentifier("flr5"));
        this.rocky.ignorecollisionswith(scslosifoundation::stringtoidentifier("flr6"));
        this.rocky.ignorecollisionswith(scslosifoundation::stringtoidentifier("flr7"));
        this.rocky.ignorecollisionswith(scslosifoundation::stringtoidentifier("flr8"));
        this.rocky.ignorecollisionswith(scslosifoundation::stringtoidentifier("flr9"));
        var1 = 0;
        while ((this.rocks.__length - 1) >= var1) {
            this.rocks[var1].init(0.7, 0, 0, 0, 0, 1.3, "lbld", "Root/data/levels/lev3/boss");
            this.rocks[var1].setresponse(2, 4, 2);
            this.rocks[var1].ignorecollisionswith(scslosifoundation::stringtoidentifier("rkmn"));
            this.rocks[var1].setprojectileoffset(0 - 10.0, 10.0, 0 - 10.0);
            this.rocks[var1].setbounceeventrepoert(1);
            var1 = var1 + 1;
        }
        this.currentrock = 0;
        this.reset();
        return null;
    }
    
    method reset() {
        var var1;
        debug::print("Calling reset");
        this.setgravity = 1;
        gccharacter::setdisplaymorphmodel(this.rocky.handle, 4);
        this.curstate = 3;
        gccharacter::setorientation(this.rocky.handle, 0);
        this.rocky.aiidle();
        var1 = 0;
        while ((this.rocks.__length - 1) >= var1) {
            this.rocks[var1].hide();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method initshort() {
        this.initfull();
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var1 = 0;
        while ((this.rocks.__length - 1) >= var1) {
            this.rocks[var1].cleanupfull();
            this.rocks[var1] = null;
            var1 = var1 + 1;
        }
        this.rocks = null;
        this.currentrock = null;
        this.areaid = null;
        this.rocky.cleanupfull();
        this.rocky = null;
        this.curstate = null;
        this.setgravity = null;
        return null;
    }
    
    method cleanupshort() {
        this.cleanupfull();
        return null;
    }
    
    method input(param1) {
        return null;
    }
    
    method process(param1) {
        if (this.setgravity == 1) {
            debug::print("Setting up stationary object");
            gccharacter::setupstationary(this.rocky.handle);
            this.setgravity = 0;
            debug::print("Setting gravity to false");
        }
        return null;
    }
    
    method show() {
        var var1;
        var var2;
        this.rocky.show();
        var1 = 0;
        var2 = 0;
        while ((this.rocks.__length - 1) >= var2) {
            this.rocks[var2].show();
            var2 = var2 + 1;
        }
        return null;
    }
    
    method hide() {
        var var1;
        var var2;
        var1 = 1;
        var2 = 0;
        while ((this.rocks.__length - 1) >= var2) {
            this.rocks[var2].remove();
            this.rocks[var2] = null;
            var2 = var2 + 1;
        }
        return null;
    }
    
    method throwrock() {
        var var1;
        var1 = this.getthrowspeed();
        debug::print("Throw speed is " + __tostring(var1));
        this.rocks[this.currentrock].setmoveableflags(1, 1, 0, 1);
        this.rocks[this.currentrock].throwprojectile(var1, 1.0, this.rocky.contid, 0.0);
        this.rocks[this.currentrock].show();
        this.currentrock = this.currentrock + 1;
        if (this.currentrock > (this.rocks.__length - 1)) {
            this.currentrock = 0;
        }
        return null;
    }
    
    method getthrowspeed() {
        var var1;
        var var2;
        var var3;
        var1 = globalclass.player.actor.getposz();
        var2 = this.rocky.getposz();
        var3 = var1 - var2;
        if (var3 < 20) {
            var3 = 20;
        }
        return var3;
    }
    
    method morph(param1) {
        if (param1 == 0) {
            if (this.curstate == 3) {
                gcstaticsoundsptrarray::playtablesound(525);
                this.rocky.morphmidcharacter(4, 1, 2, 1.5, 1);
                this.curstate = 2;
            }
            else if (this.curstate == 2) {
                this.rocky.morphcharacter(2, 3, 0.75, 1);
                this.curstate = 0;
            }
        }
        else if (param1 == 1) {
            if (this.curstate == 0) {
                this.rocky.morphcharacter(3, 2, 1.25, 1);
                this.curstate = 1;
            }
            else if (this.curstate == 1) {
                gcstaticsoundsptrarray::playtablesound(525);
                this.rocky.morphmidcharacter(2, 1, 4, 0.25, 1);
                this.curstate = 3;
            }
        }
        return null;
    }
    
    method stomp() {
        this.rocky.setsplitanimation(1919627568, -1);
        gccharactermoveinterpreter::checkanimdone(1919627568);
        gccharactermoveinterpreter::checkanimdone(1919627569);
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
}